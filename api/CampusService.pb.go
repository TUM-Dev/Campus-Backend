// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: CampusService.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRoomScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room  int32                  `protobuf:"varint,1,opt,name=room,proto3" json:"room,omitempty"`
	Start *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *GetRoomScheduleRequest) Reset() {
	*x = GetRoomScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomScheduleRequest) ProtoMessage() {}

func (x *GetRoomScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetRoomScheduleRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{0}
}

func (x *GetRoomScheduleRequest) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *GetRoomScheduleRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetRoomScheduleRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type GetRoomScheduleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*GetRoomScheduleReply_RoomScheduleEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetRoomScheduleReply) Reset() {
	*x = GetRoomScheduleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomScheduleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomScheduleReply) ProtoMessage() {}

func (x *GetRoomScheduleReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomScheduleReply.ProtoReflect.Descriptor instead.
func (*GetRoomScheduleReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{1}
}

func (x *GetRoomScheduleReply) GetEvents() []*GetRoomScheduleReply_RoomScheduleEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetRoomCoordinatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArchId string `protobuf:"bytes,1,opt,name=arch_id,json=archId,proto3" json:"arch_id,omitempty"`
}

func (x *GetRoomCoordinatesRequest) Reset() {
	*x = GetRoomCoordinatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomCoordinatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomCoordinatesRequest) ProtoMessage() {}

func (x *GetRoomCoordinatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomCoordinatesRequest.ProtoReflect.Descriptor instead.
func (*GetRoomCoordinatesRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{2}
}

func (x *GetRoomCoordinatesRequest) GetArchId() string {
	if x != nil {
		return x.ArchId
	}
	return ""
}

type GetRoomCoordinatesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UtmZone     string  `protobuf:"bytes,1,opt,name=utm_zone,json=utmZone,proto3" json:"utm_zone,omitempty"`
	UtmEasting  float32 `protobuf:"fixed32,2,opt,name=utm_easting,json=utmEasting,proto3" json:"utm_easting,omitempty"`
	UtmNorthing float32 `protobuf:"fixed32,3,opt,name=utm_northing,json=utmNorthing,proto3" json:"utm_northing,omitempty"`
}

func (x *GetRoomCoordinatesReply) Reset() {
	*x = GetRoomCoordinatesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomCoordinatesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomCoordinatesReply) ProtoMessage() {}

func (x *GetRoomCoordinatesReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomCoordinatesReply.ProtoReflect.Descriptor instead.
func (*GetRoomCoordinatesReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{3}
}

func (x *GetRoomCoordinatesReply) GetUtmZone() string {
	if x != nil {
		return x.UtmZone
	}
	return ""
}

func (x *GetRoomCoordinatesReply) GetUtmEasting() float32 {
	if x != nil {
		return x.UtmEasting
	}
	return 0
}

func (x *GetRoomCoordinatesReply) GetUtmNorthing() float32 {
	if x != nil {
		return x.UtmNorthing
	}
	return 0
}

type GetRoomMapsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArchId string `protobuf:"bytes,1,opt,name=arch_id,json=archId,proto3" json:"arch_id,omitempty"`
}

func (x *GetRoomMapsRequest) Reset() {
	*x = GetRoomMapsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomMapsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomMapsRequest) ProtoMessage() {}

func (x *GetRoomMapsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomMapsRequest.ProtoReflect.Descriptor instead.
func (*GetRoomMapsRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{4}
}

func (x *GetRoomMapsRequest) GetArchId() string {
	if x != nil {
		return x.ArchId
	}
	return ""
}

type GetRoomMapsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Maps []*GetRoomMapsReply_Map `protobuf:"bytes,1,rep,name=maps,proto3" json:"maps,omitempty"`
}

func (x *GetRoomMapsReply) Reset() {
	*x = GetRoomMapsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomMapsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomMapsReply) ProtoMessage() {}

func (x *GetRoomMapsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomMapsReply.ProtoReflect.Descriptor instead.
func (*GetRoomMapsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{5}
}

func (x *GetRoomMapsReply) GetMaps() []*GetRoomMapsReply_Map {
	if x != nil {
		return x.Maps
	}
	return nil
}

type GetLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *GetLocationsRequest) Reset() {
	*x = GetLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationsRequest) ProtoMessage() {}

func (x *GetLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationsRequest.ProtoReflect.Descriptor instead.
func (*GetLocationsRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{6}
}

func (x *GetLocationsRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type GetLocationsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*GetLocationsReply_Location `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *GetLocationsReply) Reset() {
	*x = GetLocationsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationsReply) ProtoMessage() {}

func (x *GetLocationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationsReply.ProtoReflect.Descriptor instead.
func (*GetLocationsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{7}
}

func (x *GetLocationsReply) GetLocations() []*GetLocationsReply_Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type SearchRoomsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchRoomsRequest) Reset() {
	*x = SearchRoomsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomsRequest) ProtoMessage() {}

func (x *SearchRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomsRequest.ProtoReflect.Descriptor instead.
func (*SearchRoomsRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{8}
}

func (x *SearchRoomsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchRoomsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*Room `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *SearchRoomsReply) Reset() {
	*x = SearchRoomsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoomsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomsReply) ProtoMessage() {}

func (x *SearchRoomsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomsReply.ProtoReflect.Descriptor instead.
func (*SearchRoomsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{9}
}

func (x *SearchRoomsReply) GetRooms() []*Room {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId     int32  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomCode   string `protobuf:"bytes,2,opt,name=room_code,json=roomCode,proto3" json:"room_code,omitempty"`
	BuildingNr string `protobuf:"bytes,3,opt,name=building_nr,json=buildingNr,proto3" json:"building_nr,omitempty"`
	ArchId     string `protobuf:"bytes,4,opt,name=arch_id,json=archId,proto3" json:"arch_id,omitempty"`
	Info       string `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	Address    string `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Purpose    string `protobuf:"bytes,7,opt,name=purpose,proto3" json:"purpose,omitempty"`
	Campus     string `protobuf:"bytes,8,opt,name=campus,proto3" json:"campus,omitempty"`
	Name       string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{10}
}

func (x *Room) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Room) GetRoomCode() string {
	if x != nil {
		return x.RoomCode
	}
	return ""
}

func (x *Room) GetBuildingNr() string {
	if x != nil {
		return x.BuildingNr
	}
	return ""
}

func (x *Room) GetArchId() string {
	if x != nil {
		return x.ArchId
	}
	return ""
}

func (x *Room) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *Room) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Room) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *Room) GetCampus() string {
	if x != nil {
		return x.Campus
	}
	return ""
}

func (x *Room) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type NewsSourceArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sources []*NewsSource `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
}

func (x *NewsSourceArray) Reset() {
	*x = NewsSourceArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsSourceArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsSourceArray) ProtoMessage() {}

func (x *NewsSourceArray) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsSourceArray.ProtoReflect.Descriptor instead.
func (*NewsSourceArray) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{11}
}

func (x *NewsSourceArray) GetSources() []*NewsSource {
	if x != nil {
		return x.Sources
	}
	return nil
}

type NewsSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Icon   string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *NewsSource) Reset() {
	*x = NewsSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsSource) ProtoMessage() {}

func (x *NewsSource) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsSource.ProtoReflect.Descriptor instead.
func (*NewsSource) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{12}
}

func (x *NewsSource) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *NewsSource) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewsSource) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type GetTopNewsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl string                 `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Link     string                 `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	Created  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	From     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	To       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GetTopNewsReply) Reset() {
	*x = GetTopNewsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopNewsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopNewsReply) ProtoMessage() {}

func (x *GetTopNewsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopNewsReply.ProtoReflect.Descriptor instead.
func (*GetTopNewsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{13}
}

func (x *GetTopNewsReply) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *GetTopNewsReply) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *GetTopNewsReply) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *GetTopNewsReply) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetTopNewsReply) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type Cafeteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cafeteria string `protobuf:"bytes,1,opt,name=cafeteria,proto3" json:"cafeteria,omitempty"`
}

func (x *Cafeteria) Reset() {
	*x = Cafeteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cafeteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cafeteria) ProtoMessage() {}

func (x *Cafeteria) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cafeteria.ProtoReflect.Descriptor instead.
func (*Cafeteria) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{14}
}

func (x *Cafeteria) GetCafeteria() string {
	if x != nil {
		return x.Cafeteria
	}
	return ""
}

type DishInCafeteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cafeteria     string `protobuf:"bytes,1,opt,name=cafeteria,proto3" json:"cafeteria,omitempty"`
	TokenizedDish string `protobuf:"bytes,2,opt,name=tokenizedDish,proto3" json:"tokenizedDish,omitempty"`
}

func (x *DishInCafeteria) Reset() {
	*x = DishInCafeteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishInCafeteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishInCafeteria) ProtoMessage() {}

func (x *DishInCafeteria) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishInCafeteria.ProtoReflect.Descriptor instead.
func (*DishInCafeteria) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{15}
}

func (x *DishInCafeteria) GetCafeteria() string {
	if x != nil {
		return x.Cafeteria
	}
	return ""
}

func (x *DishInCafeteria) GetTokenizedDish() string {
	if x != nil {
		return x.TokenizedDish
	}
	return ""
}

type GetCafeteriaRatingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating        []*CafeteriaRatingGet `protobuf:"bytes,1,rep,name=rating,proto3" json:"rating,omitempty"`
	AverageRating int32                 `protobuf:"varint,2,opt,name=averageRating,proto3" json:"averageRating,omitempty"`
}

func (x *GetCafeteriaRatingReply) Reset() {
	*x = GetCafeteriaRatingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCafeteriaRatingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCafeteriaRatingReply) ProtoMessage() {}

func (x *GetCafeteriaRatingReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCafeteriaRatingReply.ProtoReflect.Descriptor instead.
func (*GetCafeteriaRatingReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{16}
}

func (x *GetCafeteriaRatingReply) GetRating() []*CafeteriaRatingGet {
	if x != nil {
		return x.Rating
	}
	return nil
}

func (x *GetCafeteriaRatingReply) GetAverageRating() int32 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

type GetDishRatingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating        []*DishRatingGet `protobuf:"bytes,1,rep,name=rating,proto3" json:"rating,omitempty"`
	AverageRating int32            `protobuf:"varint,2,opt,name=averageRating,proto3" json:"averageRating,omitempty"`
}

func (x *GetDishRatingReply) Reset() {
	*x = GetDishRatingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDishRatingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDishRatingReply) ProtoMessage() {}

func (x *GetDishRatingReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDishRatingReply.ProtoReflect.Descriptor instead.
func (*GetDishRatingReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{17}
}

func (x *GetDishRatingReply) GetRating() []*DishRatingGet {
	if x != nil {
		return x.Rating
	}
	return nil
}

func (x *GetDishRatingReply) GetAverageRating() int32 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

type CafeteriaRatingGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating             int32                  `protobuf:"varint,1,opt,name=rating,proto3" json:"rating,omitempty"`
	Cafeteria          int32                  `protobuf:"varint,2,opt,name=cafeteria,proto3" json:"cafeteria,omitempty"`
	Image              string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Tags               []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	CafeteriaVisitedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=CafeteriaVisitedAt,proto3" json:"CafeteriaVisitedAt,omitempty"`
	Comment            string                 `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CafeteriaRatingGet) Reset() {
	*x = CafeteriaRatingGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CafeteriaRatingGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CafeteriaRatingGet) ProtoMessage() {}

func (x *CafeteriaRatingGet) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CafeteriaRatingGet.ProtoReflect.Descriptor instead.
func (*CafeteriaRatingGet) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{18}
}

func (x *CafeteriaRatingGet) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *CafeteriaRatingGet) GetCafeteria() int32 {
	if x != nil {
		return x.Cafeteria
	}
	return 0
}

func (x *CafeteriaRatingGet) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CafeteriaRatingGet) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CafeteriaRatingGet) GetCafeteriaVisitedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CafeteriaVisitedAt
	}
	return nil
}

func (x *CafeteriaRatingGet) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type DishRatingGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating             int32                  `protobuf:"varint,1,opt,name=rating,proto3" json:"rating,omitempty"`
	Cafeteria          int32                  `protobuf:"varint,2,opt,name=cafeteria,proto3" json:"cafeteria,omitempty"`
	Meal               int32                  `protobuf:"varint,3,opt,name=meal,proto3" json:"meal,omitempty"`
	Image              string                 `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Tags               []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	CafeteriaVisitedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=CafeteriaVisitedAt,proto3" json:"CafeteriaVisitedAt,omitempty"`
	Comment            string                 `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *DishRatingGet) Reset() {
	*x = DishRatingGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishRatingGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishRatingGet) ProtoMessage() {}

func (x *DishRatingGet) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishRatingGet.ProtoReflect.Descriptor instead.
func (*DishRatingGet) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{19}
}

func (x *DishRatingGet) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *DishRatingGet) GetCafeteria() int32 {
	if x != nil {
		return x.Cafeteria
	}
	return 0
}

func (x *DishRatingGet) GetMeal() int32 {
	if x != nil {
		return x.Meal
	}
	return 0
}

func (x *DishRatingGet) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *DishRatingGet) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DishRatingGet) GetCafeteriaVisitedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CafeteriaVisitedAt
	}
	return nil
}

func (x *DishRatingGet) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type NewRating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating             int32                  `protobuf:"varint,1,opt,name=rating,proto3" json:"rating,omitempty"`
	Cafeteria          int32                  `protobuf:"varint,2,opt,name=cafeteria,proto3" json:"cafeteria,omitempty"`
	Meal               int32                  `protobuf:"varint,3,opt,name=meal,proto3" json:"meal,omitempty"`
	Image              string                 `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Tags               []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	CafeteriaVisitedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=CafeteriaVisitedAt,proto3" json:"CafeteriaVisitedAt,omitempty"`
	IdentifierOfUser   string                 `protobuf:"bytes,7,opt,name=identifierOfUser,proto3" json:"identifierOfUser,omitempty"`
	Comment            string                 `protobuf:"bytes,8,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *NewRating) Reset() {
	*x = NewRating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRating) ProtoMessage() {}

func (x *NewRating) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRating.ProtoReflect.Descriptor instead.
func (*NewRating) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{20}
}

func (x *NewRating) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *NewRating) GetCafeteria() int32 {
	if x != nil {
		return x.Cafeteria
	}
	return 0
}

func (x *NewRating) GetMeal() int32 {
	if x != nil {
		return x.Meal
	}
	return 0
}

func (x *NewRating) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *NewRating) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *NewRating) GetCafeteriaVisitedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CafeteriaVisitedAt
	}
	return nil
}

func (x *NewRating) GetIdentifierOfUser() string {
	if x != nil {
		return x.IdentifierOfUser
	}
	return ""
}

func (x *NewRating) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type GetRoomScheduleReply_RoomScheduleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Title      string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	EventId    int32                  `protobuf:"varint,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	CourseCode string                 `protobuf:"bytes,5,opt,name=course_code,json=courseCode,proto3" json:"course_code,omitempty"`
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) Reset() {
	*x = GetRoomScheduleReply_RoomScheduleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomScheduleReply_RoomScheduleEvent) ProtoMessage() {}

func (x *GetRoomScheduleReply_RoomScheduleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomScheduleReply_RoomScheduleEvent.ProtoReflect.Descriptor instead.
func (*GetRoomScheduleReply_RoomScheduleEvent) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetEventId() int32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetCourseCode() string {
	if x != nil {
		return x.CourseCode
	}
	return ""
}

type GetRoomMapsReply_Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId       int64  `protobuf:"varint,1,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Scale       int64  `protobuf:"varint,3,opt,name=scale,proto3" json:"scale,omitempty"`
	Width       int64  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height      int64  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetRoomMapsReply_Map) Reset() {
	*x = GetRoomMapsReply_Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomMapsReply_Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomMapsReply_Map) ProtoMessage() {}

func (x *GetRoomMapsReply_Map) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomMapsReply_Map.ProtoReflect.Descriptor instead.
func (*GetRoomMapsReply_Map) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetRoomMapsReply_Map) GetMapId() int64 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *GetRoomMapsReply_Map) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetRoomMapsReply_Map) GetScale() int64 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *GetRoomMapsReply_Map) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GetRoomMapsReply_Map) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetLocationsReply_Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Lon      string `protobuf:"bytes,3,opt,name=lon,proto3" json:"lon,omitempty"`
	Lat      string `protobuf:"bytes,4,opt,name=lat,proto3" json:"lat,omitempty"`
	Radius   string `protobuf:"bytes,5,opt,name=radius,proto3" json:"radius,omitempty"`
}

func (x *GetLocationsReply_Location) Reset() {
	*x = GetLocationsReply_Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationsReply_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationsReply_Location) ProtoMessage() {}

func (x *GetLocationsReply_Location) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationsReply_Location.ProtoReflect.Descriptor instead.
func (*GetLocationsReply_Location) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GetLocationsReply_Location) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *GetLocationsReply_Location) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetLocationsReply_Location) GetLon() string {
	if x != nil {
		return x.Lon
	}
	return ""
}

func (x *GetLocationsReply_Location) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *GetLocationsReply_Location) GetRadius() string {
	if x != nil {
		return x.Radius
	}
	return ""
}

var File_CampusService_proto protoreflect.FileDescriptor

var file_CampusService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0xa3, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0xc5, 0x01, 0x0a, 0x11, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x63, 0x68, 0x49,
	0x64, 0x22, 0x78, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x74, 0x6d, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x75, 0x74, 0x6d, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x74, 0x6d, 0x5f, 0x65,
	0x61, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x75, 0x74,
	0x6d, 0x45, 0x61, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x74, 0x6d, 0x5f,
	0x6e, 0x6f, 0x72, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x75, 0x74, 0x6d, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x2d, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2d, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4d, 0x61, 0x70, 0x52, 0x04, 0x6d, 0x61, 0x70, 0x73, 0x1a, 0x82,
	0x01, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x31, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xca, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x76, 0x0a, 0x08, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x22, 0x2a, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x33, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05, 0x72,
	0x6f, 0x6f, 0x6d, 0x73, 0x22, 0xea, 0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x6e, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x4e, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75,
	0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x3c, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x73,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22,
	0x4e, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22,
	0xd4, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x09, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x22, 0x55, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x43, 0x61, 0x66, 0x65, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x64, 0x44,
	0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x69, 0x7a, 0x65, 0x64, 0x44, 0x69, 0x73, 0x68, 0x22, 0x70, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x52, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x66, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x44, 0x69, 0x73, 0x68, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2a, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x47, 0x65, 0x74, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x22, 0xda, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x4a, 0x0a, 0x12, 0x43, 0x61, 0x66,
	0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x12, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x56, 0x69, 0x73, 0x69,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0xe9, 0x01, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x68, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x66,
	0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61,
	0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x65, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x4a, 0x0a, 0x12, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x43,
	0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x91, 0x02, 0x0a, 0x09,
	0x4e, 0x65, 0x77, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x65, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d,
	0x65, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x4a, 0x0a,
	0x12, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4f,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x32,
	0xf5, 0x0c, 0x0a, 0x06, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x12, 0x4d, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x77,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09,
	0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x74, 0x6f, 0x70, 0x12, 0x5e, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x77, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x12, 0x0d, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x62, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x68, 0x0a, 0x0b, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f,
	0x6f, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x22, 0x17, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x72, 0x6f,
	0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x62, 0x05, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x12, 0x6a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x15, 0x2f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x7d, 0x62, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x60, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x10, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x66, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x70, 0x73, 0x3a, 0x01, 0x2a, 0x62, 0x04, 0x6d, 0x61, 0x70,
	0x73, 0x12, 0x7b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f,
	0x72, 0x6f, 0x6f, 0x6d, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x7b,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2a, 0x22, 0x1d, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x72,
	0x6f, 0x6f, 0x6d, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x3a, 0x01, 0x2a, 0x62, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x7c, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x68, 0x72, 0x65, 0x65, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29,
	0x12, 0x27, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x2f, 0x67, 0x65, 0x74,
	0x4c, 0x61, 0x73, 0x74, 0x54, 0x68, 0x72, 0x65, 0x65, 0x12, 0x74, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54,
	0x6f, 0x64, 0x61, 0x79, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x66, 0x65, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x63, 0x61, 0x66,
	0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x61, 0x66,
	0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x2f, 0x67, 0x65, 0x74, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12,
	0x70, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x6c, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21,
	0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x2f, 0x67, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x12, 0x73, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x68, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x68, 0x72, 0x65, 0x65, 0x12, 0x14, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x68, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x24, 0x12, 0x22, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x2f, 0x64, 0x69, 0x73, 0x68, 0x2f, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x73,
	0x74, 0x54, 0x68, 0x72, 0x65, 0x65, 0x12, 0x6b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73,
	0x68, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x14, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x68,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x64, 0x69, 0x73, 0x68, 0x2f, 0x67, 0x65, 0x74, 0x54, 0x6f,
	0x64, 0x61, 0x79, 0x12, 0x67, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x68, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x6c, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69,
	0x73, 0x68, 0x49, 0x6e, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x1a, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x68, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c,
	0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x2f, 0x64, 0x69, 0x73, 0x68, 0x2f, 0x67, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x73, 0x0a, 0x12,
	0x4e, 0x65, 0x77, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x2f, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x2f, 0x6e,
	0x65, 0x77, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x64, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x44, 0x69, 0x73, 0x68, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x25, 0x12, 0x23, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x2f, 0x64, 0x69, 0x73, 0x68, 0x2f, 0x6e, 0x65, 0x77, 0x44, 0x69, 0x73,
	0x68, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x5e, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x2e, 0x74,
	0x75, 0x6d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x0e, 0x43,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x55, 0x4d, 0x2d,
	0x44, 0x65, 0x76, 0x2f, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x2d, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0xaa, 0x02, 0x0e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x41,
	0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_CampusService_proto_rawDescOnce sync.Once
	file_CampusService_proto_rawDescData = file_CampusService_proto_rawDesc
)

func file_CampusService_proto_rawDescGZIP() []byte {
	file_CampusService_proto_rawDescOnce.Do(func() {
		file_CampusService_proto_rawDescData = protoimpl.X.CompressGZIP(file_CampusService_proto_rawDescData)
	})
	return file_CampusService_proto_rawDescData
}

var file_CampusService_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_CampusService_proto_goTypes = []interface{}{
	(*GetRoomScheduleRequest)(nil),                 // 0: api.GetRoomScheduleRequest
	(*GetRoomScheduleReply)(nil),                   // 1: api.GetRoomScheduleReply
	(*GetRoomCoordinatesRequest)(nil),              // 2: api.GetRoomCoordinatesRequest
	(*GetRoomCoordinatesReply)(nil),                // 3: api.GetRoomCoordinatesReply
	(*GetRoomMapsRequest)(nil),                     // 4: api.GetRoomMapsRequest
	(*GetRoomMapsReply)(nil),                       // 5: api.GetRoomMapsReply
	(*GetLocationsRequest)(nil),                    // 6: api.GetLocationsRequest
	(*GetLocationsReply)(nil),                      // 7: api.GetLocationsReply
	(*SearchRoomsRequest)(nil),                     // 8: api.SearchRoomsRequest
	(*SearchRoomsReply)(nil),                       // 9: api.SearchRoomsReply
	(*Room)(nil),                                   // 10: api.Room
	(*NewsSourceArray)(nil),                        // 11: api.NewsSourceArray
	(*NewsSource)(nil),                             // 12: api.NewsSource
	(*GetTopNewsReply)(nil),                        // 13: api.GetTopNewsReply
	(*Cafeteria)(nil),                              // 14: api.Cafeteria
	(*DishInCafeteria)(nil),                        // 15: api.DishInCafeteria
	(*GetCafeteriaRatingReply)(nil),                // 16: api.GetCafeteriaRatingReply
	(*GetDishRatingReply)(nil),                     // 17: api.GetDishRatingReply
	(*CafeteriaRatingGet)(nil),                     // 18: api.CafeteriaRatingGet
	(*DishRatingGet)(nil),                          // 19: api.DishRatingGet
	(*NewRating)(nil),                              // 20: api.NewRating
	(*GetRoomScheduleReply_RoomScheduleEvent)(nil), // 21: api.GetRoomScheduleReply.RoomScheduleEvent
	(*GetRoomMapsReply_Map)(nil),                   // 22: api.GetRoomMapsReply.Map
	(*GetLocationsReply_Location)(nil),             // 23: api.GetLocationsReply.Location
	(*timestamppb.Timestamp)(nil),                  // 24: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                          // 25: google.protobuf.Empty
}
var file_CampusService_proto_depIdxs = []int32{
	24, // 0: api.GetRoomScheduleRequest.start:type_name -> google.protobuf.Timestamp
	24, // 1: api.GetRoomScheduleRequest.end:type_name -> google.protobuf.Timestamp
	21, // 2: api.GetRoomScheduleReply.events:type_name -> api.GetRoomScheduleReply.RoomScheduleEvent
	22, // 3: api.GetRoomMapsReply.maps:type_name -> api.GetRoomMapsReply.Map
	23, // 4: api.GetLocationsReply.locations:type_name -> api.GetLocationsReply.Location
	10, // 5: api.SearchRoomsReply.rooms:type_name -> api.Room
	12, // 6: api.NewsSourceArray.sources:type_name -> api.NewsSource
	24, // 7: api.GetTopNewsReply.created:type_name -> google.protobuf.Timestamp
	24, // 8: api.GetTopNewsReply.from:type_name -> google.protobuf.Timestamp
	24, // 9: api.GetTopNewsReply.to:type_name -> google.protobuf.Timestamp
	18, // 10: api.GetCafeteriaRatingReply.rating:type_name -> api.CafeteriaRatingGet
	19, // 11: api.GetDishRatingReply.rating:type_name -> api.DishRatingGet
	24, // 12: api.CafeteriaRatingGet.CafeteriaVisitedAt:type_name -> google.protobuf.Timestamp
	24, // 13: api.DishRatingGet.CafeteriaVisitedAt:type_name -> google.protobuf.Timestamp
	24, // 14: api.NewRating.CafeteriaVisitedAt:type_name -> google.protobuf.Timestamp
	24, // 15: api.GetRoomScheduleReply.RoomScheduleEvent.start:type_name -> google.protobuf.Timestamp
	24, // 16: api.GetRoomScheduleReply.RoomScheduleEvent.end:type_name -> google.protobuf.Timestamp
	25, // 17: api.Campus.GetTopNews:input_type -> google.protobuf.Empty
	25, // 18: api.Campus.GetNewsSources:input_type -> google.protobuf.Empty
	8,  // 19: api.Campus.SearchRooms:input_type -> api.SearchRoomsRequest
	6,  // 20: api.Campus.GetLocations:input_type -> api.GetLocationsRequest
	4,  // 21: api.Campus.GetRoomMaps:input_type -> api.GetRoomMapsRequest
	2,  // 22: api.Campus.GetRoomCoordinates:input_type -> api.GetRoomCoordinatesRequest
	0,  // 23: api.Campus.GetRoomSchedule:input_type -> api.GetRoomScheduleRequest
	14, // 24: api.Campus.GetCafeteriaRatingLastThree:input_type -> api.Cafeteria
	14, // 25: api.Campus.GetCafeteriaRatingToday:input_type -> api.Cafeteria
	14, // 26: api.Campus.GetCafeteriaRatingAll:input_type -> api.Cafeteria
	15, // 27: api.Campus.GetDishRatingLastThree:input_type -> api.DishInCafeteria
	15, // 28: api.Campus.GetDishRatingToday:input_type -> api.DishInCafeteria
	15, // 29: api.Campus.GetDishRatingAll:input_type -> api.DishInCafeteria
	20, // 30: api.Campus.NewCafeteriaRating:input_type -> api.NewRating
	20, // 31: api.Campus.NewDishRating:input_type -> api.NewRating
	13, // 32: api.Campus.GetTopNews:output_type -> api.GetTopNewsReply
	11, // 33: api.Campus.GetNewsSources:output_type -> api.NewsSourceArray
	9,  // 34: api.Campus.SearchRooms:output_type -> api.SearchRoomsReply
	7,  // 35: api.Campus.GetLocations:output_type -> api.GetLocationsReply
	5,  // 36: api.Campus.GetRoomMaps:output_type -> api.GetRoomMapsReply
	3,  // 37: api.Campus.GetRoomCoordinates:output_type -> api.GetRoomCoordinatesReply
	1,  // 38: api.Campus.GetRoomSchedule:output_type -> api.GetRoomScheduleReply
	16, // 39: api.Campus.GetCafeteriaRatingLastThree:output_type -> api.GetCafeteriaRatingReply
	16, // 40: api.Campus.GetCafeteriaRatingToday:output_type -> api.GetCafeteriaRatingReply
	16, // 41: api.Campus.GetCafeteriaRatingAll:output_type -> api.GetCafeteriaRatingReply
	17, // 42: api.Campus.GetDishRatingLastThree:output_type -> api.GetDishRatingReply
	17, // 43: api.Campus.GetDishRatingToday:output_type -> api.GetDishRatingReply
	17, // 44: api.Campus.GetDishRatingAll:output_type -> api.GetDishRatingReply
	25, // 45: api.Campus.NewCafeteriaRating:output_type -> google.protobuf.Empty
	25, // 46: api.Campus.NewDishRating:output_type -> google.protobuf.Empty
	32, // [32:47] is the sub-list for method output_type
	17, // [17:32] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_CampusService_proto_init() }
func file_CampusService_proto_init() {
	if File_CampusService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_CampusService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomScheduleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomCoordinatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomCoordinatesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomMapsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomMapsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRoomsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRoomsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsSourceArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopNewsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cafeteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishInCafeteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCafeteriaRatingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDishRatingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CafeteriaRatingGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishRatingGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomScheduleReply_RoomScheduleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomMapsReply_Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationsReply_Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_CampusService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_CampusService_proto_goTypes,
		DependencyIndexes: file_CampusService_proto_depIdxs,
		MessageInfos:      file_CampusService_proto_msgTypes,
	}.Build()
	File_CampusService_proto = out.File
	file_CampusService_proto_rawDesc = nil
	file_CampusService_proto_goTypes = nil
	file_CampusService_proto_depIdxs = nil
}
