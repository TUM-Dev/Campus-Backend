// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: CampusService.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type APName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *APName) Reset() {
	*x = APName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APName) ProtoMessage() {}

func (x *APName) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APName.ProtoReflect.Descriptor instead.
func (*APName) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{0}
}

func (x *APName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AccessPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Lat       string `protobuf:"bytes,2,opt,name=lat,proto3" json:"lat,omitempty"`
	Long      string `protobuf:"bytes,3,opt,name=long,proto3" json:"long,omitempty"`
	Intensity int64  `protobuf:"varint,4,opt,name=intensity,proto3" json:"intensity,omitempty"`
	Max       int64  `protobuf:"varint,5,opt,name=max,proto3" json:"max,omitempty"`
	Min       int64  `protobuf:"varint,6,opt,name=min,proto3" json:"min,omitempty"`
}

func (x *AccessPoint) Reset() {
	*x = AccessPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPoint) ProtoMessage() {}

func (x *AccessPoint) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPoint.ProtoReflect.Descriptor instead.
func (*AccessPoint) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{1}
}

func (x *AccessPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccessPoint) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *AccessPoint) GetLong() string {
	if x != nil {
		return x.Long
	}
	return ""
}

func (x *AccessPoint) GetIntensity() int64 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *AccessPoint) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *AccessPoint) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

type APRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *APRequest) Reset() {
	*x = APRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APRequest) ProtoMessage() {}

func (x *APRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APRequest.ProtoReflect.Descriptor instead.
func (*APRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{2}
}

func (x *APRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *APRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type APResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accesspoint *AccessPoint `protobuf:"bytes,1,opt,name=accesspoint,proto3" json:"accesspoint,omitempty"`
}

func (x *APResponse) Reset() {
	*x = APResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APResponse) ProtoMessage() {}

func (x *APResponse) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APResponse.ProtoReflect.Descriptor instead.
func (*APResponse) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{3}
}

func (x *APResponse) GetAccesspoint() *AccessPoint {
	if x != nil {
		return x.Accesspoint
	}
	return nil
}

type GetRoomScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room  int32                  `protobuf:"varint,1,opt,name=room,proto3" json:"room,omitempty"`
	Start *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *GetRoomScheduleRequest) Reset() {
	*x = GetRoomScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomScheduleRequest) ProtoMessage() {}

func (x *GetRoomScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetRoomScheduleRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{4}
}

func (x *GetRoomScheduleRequest) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *GetRoomScheduleRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetRoomScheduleRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type GetRoomScheduleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*GetRoomScheduleReply_RoomScheduleEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetRoomScheduleReply) Reset() {
	*x = GetRoomScheduleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomScheduleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomScheduleReply) ProtoMessage() {}

func (x *GetRoomScheduleReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomScheduleReply.ProtoReflect.Descriptor instead.
func (*GetRoomScheduleReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{5}
}

func (x *GetRoomScheduleReply) GetEvents() []*GetRoomScheduleReply_RoomScheduleEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetRoomCoordinatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArchId string `protobuf:"bytes,1,opt,name=arch_id,json=archId,proto3" json:"arch_id,omitempty"`
}

func (x *GetRoomCoordinatesRequest) Reset() {
	*x = GetRoomCoordinatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomCoordinatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomCoordinatesRequest) ProtoMessage() {}

func (x *GetRoomCoordinatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomCoordinatesRequest.ProtoReflect.Descriptor instead.
func (*GetRoomCoordinatesRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{6}
}

func (x *GetRoomCoordinatesRequest) GetArchId() string {
	if x != nil {
		return x.ArchId
	}
	return ""
}

type GetRoomCoordinatesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UtmZone     string  `protobuf:"bytes,1,opt,name=utm_zone,json=utmZone,proto3" json:"utm_zone,omitempty"`
	UtmEasting  float32 `protobuf:"fixed32,2,opt,name=utm_easting,json=utmEasting,proto3" json:"utm_easting,omitempty"`
	UtmNorthing float32 `protobuf:"fixed32,3,opt,name=utm_northing,json=utmNorthing,proto3" json:"utm_northing,omitempty"`
}

func (x *GetRoomCoordinatesReply) Reset() {
	*x = GetRoomCoordinatesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomCoordinatesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomCoordinatesReply) ProtoMessage() {}

func (x *GetRoomCoordinatesReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomCoordinatesReply.ProtoReflect.Descriptor instead.
func (*GetRoomCoordinatesReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{7}
}

func (x *GetRoomCoordinatesReply) GetUtmZone() string {
	if x != nil {
		return x.UtmZone
	}
	return ""
}

func (x *GetRoomCoordinatesReply) GetUtmEasting() float32 {
	if x != nil {
		return x.UtmEasting
	}
	return 0
}

func (x *GetRoomCoordinatesReply) GetUtmNorthing() float32 {
	if x != nil {
		return x.UtmNorthing
	}
	return 0
}

type GetRoomMapsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArchId string `protobuf:"bytes,1,opt,name=arch_id,json=archId,proto3" json:"arch_id,omitempty"`
}

func (x *GetRoomMapsRequest) Reset() {
	*x = GetRoomMapsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomMapsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomMapsRequest) ProtoMessage() {}

func (x *GetRoomMapsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomMapsRequest.ProtoReflect.Descriptor instead.
func (*GetRoomMapsRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{8}
}

func (x *GetRoomMapsRequest) GetArchId() string {
	if x != nil {
		return x.ArchId
	}
	return ""
}

type GetRoomMapsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Maps []*GetRoomMapsReply_Map `protobuf:"bytes,1,rep,name=maps,proto3" json:"maps,omitempty"`
}

func (x *GetRoomMapsReply) Reset() {
	*x = GetRoomMapsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomMapsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomMapsReply) ProtoMessage() {}

func (x *GetRoomMapsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomMapsReply.ProtoReflect.Descriptor instead.
func (*GetRoomMapsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{9}
}

func (x *GetRoomMapsReply) GetMaps() []*GetRoomMapsReply_Map {
	if x != nil {
		return x.Maps
	}
	return nil
}

type GetLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *GetLocationsRequest) Reset() {
	*x = GetLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationsRequest) ProtoMessage() {}

func (x *GetLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationsRequest.ProtoReflect.Descriptor instead.
func (*GetLocationsRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{10}
}

func (x *GetLocationsRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type GetLocationsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*GetLocationsReply_Location `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *GetLocationsReply) Reset() {
	*x = GetLocationsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationsReply) ProtoMessage() {}

func (x *GetLocationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationsReply.ProtoReflect.Descriptor instead.
func (*GetLocationsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{11}
}

func (x *GetLocationsReply) GetLocations() []*GetLocationsReply_Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type SearchRoomsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchRoomsRequest) Reset() {
	*x = SearchRoomsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomsRequest) ProtoMessage() {}

func (x *SearchRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomsRequest.ProtoReflect.Descriptor instead.
func (*SearchRoomsRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{12}
}

func (x *SearchRoomsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchRoomsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*Room `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *SearchRoomsReply) Reset() {
	*x = SearchRoomsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoomsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomsReply) ProtoMessage() {}

func (x *SearchRoomsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomsReply.ProtoReflect.Descriptor instead.
func (*SearchRoomsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{13}
}

func (x *SearchRoomsReply) GetRooms() []*Room {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId     int32  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomCode   string `protobuf:"bytes,2,opt,name=room_code,json=roomCode,proto3" json:"room_code,omitempty"`
	BuildingNr string `protobuf:"bytes,3,opt,name=building_nr,json=buildingNr,proto3" json:"building_nr,omitempty"`
	ArchId     string `protobuf:"bytes,4,opt,name=arch_id,json=archId,proto3" json:"arch_id,omitempty"`
	Info       string `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	Address    string `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Purpose    string `protobuf:"bytes,7,opt,name=purpose,proto3" json:"purpose,omitempty"`
	Campus     string `protobuf:"bytes,8,opt,name=campus,proto3" json:"campus,omitempty"`
	Name       string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{14}
}

func (x *Room) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Room) GetRoomCode() string {
	if x != nil {
		return x.RoomCode
	}
	return ""
}

func (x *Room) GetBuildingNr() string {
	if x != nil {
		return x.BuildingNr
	}
	return ""
}

func (x *Room) GetArchId() string {
	if x != nil {
		return x.ArchId
	}
	return ""
}

func (x *Room) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *Room) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Room) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *Room) GetCampus() string {
	if x != nil {
		return x.Campus
	}
	return ""
}

func (x *Room) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type NewsSourceArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sources []*NewsSource `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
}

func (x *NewsSourceArray) Reset() {
	*x = NewsSourceArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsSourceArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsSourceArray) ProtoMessage() {}

func (x *NewsSourceArray) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsSourceArray.ProtoReflect.Descriptor instead.
func (*NewsSourceArray) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{15}
}

func (x *NewsSourceArray) GetSources() []*NewsSource {
	if x != nil {
		return x.Sources
	}
	return nil
}

type NewsSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Icon   string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *NewsSource) Reset() {
	*x = NewsSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsSource) ProtoMessage() {}

func (x *NewsSource) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsSource.ProtoReflect.Descriptor instead.
func (*NewsSource) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{16}
}

func (x *NewsSource) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *NewsSource) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewsSource) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type GetTopNewsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl string                 `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Link     string                 `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	Created  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	From     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	To       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GetTopNewsReply) Reset() {
	*x = GetTopNewsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopNewsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopNewsReply) ProtoMessage() {}

func (x *GetTopNewsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopNewsReply.ProtoReflect.Descriptor instead.
func (*GetTopNewsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{17}
}

func (x *GetTopNewsReply) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *GetTopNewsReply) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *GetTopNewsReply) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *GetTopNewsReply) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetTopNewsReply) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type CafeteriaRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CafeteriaName string                 `protobuf:"bytes,1,opt,name=cafeteriaName,proto3" json:"cafeteriaName,omitempty"`
	From          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To            *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *CafeteriaRatingRequest) Reset() {
	*x = CafeteriaRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CafeteriaRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CafeteriaRatingRequest) ProtoMessage() {}

func (x *CafeteriaRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CafeteriaRatingRequest.ProtoReflect.Descriptor instead.
func (*CafeteriaRatingRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{18}
}

func (x *CafeteriaRatingRequest) GetCafeteriaName() string {
	if x != nil {
		return x.CafeteriaName
	}
	return ""
}

func (x *CafeteriaRatingRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *CafeteriaRatingRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *CafeteriaRatingRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type MealRatingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CafeteriaName string                 `protobuf:"bytes,1,opt,name=cafeteriaName,proto3" json:"cafeteriaName,omitempty"`
	Meal          string                 `protobuf:"bytes,2,opt,name=meal,proto3" json:"meal,omitempty"`
	From          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *MealRatingsRequest) Reset() {
	*x = MealRatingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MealRatingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MealRatingsRequest) ProtoMessage() {}

func (x *MealRatingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MealRatingsRequest.ProtoReflect.Descriptor instead.
func (*MealRatingsRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{19}
}

func (x *MealRatingsRequest) GetCafeteriaName() string {
	if x != nil {
		return x.CafeteriaName
	}
	return ""
}

func (x *MealRatingsRequest) GetMeal() string {
	if x != nil {
		return x.Meal
	}
	return ""
}

func (x *MealRatingsRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *MealRatingsRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *MealRatingsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CafeteriaRatingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating        []*CafeteriaRating  `protobuf:"bytes,1,rep,name=rating,proto3" json:"rating,omitempty"`
	AverageRating float64             `protobuf:"fixed64,2,opt,name=averageRating,proto3" json:"averageRating,omitempty"`
	MinRating     int32               `protobuf:"varint,3,opt,name=minRating,proto3" json:"minRating,omitempty"`
	MaxRating     int32               `protobuf:"varint,4,opt,name=maxRating,proto3" json:"maxRating,omitempty"`
	RatingTags    []*TagRatingsResult `protobuf:"bytes,5,rep,name=ratingTags,proto3" json:"ratingTags,omitempty"`
}

func (x *CafeteriaRatingResponse) Reset() {
	*x = CafeteriaRatingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CafeteriaRatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CafeteriaRatingResponse) ProtoMessage() {}

func (x *CafeteriaRatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CafeteriaRatingResponse.ProtoReflect.Descriptor instead.
func (*CafeteriaRatingResponse) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{20}
}

func (x *CafeteriaRatingResponse) GetRating() []*CafeteriaRating {
	if x != nil {
		return x.Rating
	}
	return nil
}

func (x *CafeteriaRatingResponse) GetAverageRating() float64 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *CafeteriaRatingResponse) GetMinRating() int32 {
	if x != nil {
		return x.MinRating
	}
	return 0
}

func (x *CafeteriaRatingResponse) GetMaxRating() int32 {
	if x != nil {
		return x.MaxRating
	}
	return 0
}

func (x *CafeteriaRatingResponse) GetRatingTags() []*TagRatingsResult {
	if x != nil {
		return x.RatingTags
	}
	return nil
}

type MealRatingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating        []*MealRating       `protobuf:"bytes,1,rep,name=rating,proto3" json:"rating,omitempty"`
	AverageRating float64             `protobuf:"fixed64,2,opt,name=averageRating,proto3" json:"averageRating,omitempty"`
	MinRating     int32               `protobuf:"varint,3,opt,name=minRating,proto3" json:"minRating,omitempty"`
	MaxRating     int32               `protobuf:"varint,4,opt,name=maxRating,proto3" json:"maxRating,omitempty"`
	RatingTags    []*TagRatingsResult `protobuf:"bytes,5,rep,name=ratingTags,proto3" json:"ratingTags,omitempty"`
	NameTags      []*TagRatingsResult `protobuf:"bytes,6,rep,name=nameTags,proto3" json:"nameTags,omitempty"`
}

func (x *MealRatingsResponse) Reset() {
	*x = MealRatingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MealRatingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MealRatingsResponse) ProtoMessage() {}

func (x *MealRatingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MealRatingsResponse.ProtoReflect.Descriptor instead.
func (*MealRatingsResponse) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{21}
}

func (x *MealRatingsResponse) GetRating() []*MealRating {
	if x != nil {
		return x.Rating
	}
	return nil
}

func (x *MealRatingsResponse) GetAverageRating() float64 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *MealRatingsResponse) GetMinRating() int32 {
	if x != nil {
		return x.MinRating
	}
	return 0
}

func (x *MealRatingsResponse) GetMaxRating() int32 {
	if x != nil {
		return x.MaxRating
	}
	return 0
}

func (x *MealRatingsResponse) GetRatingTags() []*TagRatingsResult {
	if x != nil {
		return x.RatingTags
	}
	return nil
}

func (x *MealRatingsResponse) GetNameTags() []*TagRatingsResult {
	if x != nil {
		return x.NameTags
	}
	return nil
}

type CafeteriaRating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating             int32                  `protobuf:"varint,1,opt,name=rating,proto3" json:"rating,omitempty"`
	CafeteriaName      string                 `protobuf:"bytes,2,opt,name=cafeteriaName,proto3" json:"cafeteriaName,omitempty"`
	Image              []byte                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	CafeteriaVisitedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=cafeteriaVisitedAt,proto3" json:"cafeteriaVisitedAt,omitempty"`
	Comment            string                 `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	TagRating          []*TagRatingOverview   `protobuf:"bytes,6,rep,name=tagRating,proto3" json:"tagRating,omitempty"`
}

func (x *CafeteriaRating) Reset() {
	*x = CafeteriaRating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CafeteriaRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CafeteriaRating) ProtoMessage() {}

func (x *CafeteriaRating) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CafeteriaRating.ProtoReflect.Descriptor instead.
func (*CafeteriaRating) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{22}
}

func (x *CafeteriaRating) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *CafeteriaRating) GetCafeteriaName() string {
	if x != nil {
		return x.CafeteriaName
	}
	return ""
}

func (x *CafeteriaRating) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *CafeteriaRating) GetCafeteriaVisitedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CafeteriaVisitedAt
	}
	return nil
}

func (x *CafeteriaRating) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CafeteriaRating) GetTagRating() []*TagRatingOverview {
	if x != nil {
		return x.TagRating
	}
	return nil
}

type MealRating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating             int32                  `protobuf:"varint,1,opt,name=rating,proto3" json:"rating,omitempty"`
	CafeteriaName      string                 `protobuf:"bytes,2,opt,name=cafeteriaName,proto3" json:"cafeteriaName,omitempty"`
	Meal               string                 `protobuf:"bytes,3,opt,name=meal,proto3" json:"meal,omitempty"`
	Image              []byte                 `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	CafeteriaVisitedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=cafeteriaVisitedAt,proto3" json:"cafeteriaVisitedAt,omitempty"`
	Comment            string                 `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	TagRating          []*TagRatingOverview   `protobuf:"bytes,7,rep,name=tagRating,proto3" json:"tagRating,omitempty"`
}

func (x *MealRating) Reset() {
	*x = MealRating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MealRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MealRating) ProtoMessage() {}

func (x *MealRating) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MealRating.ProtoReflect.Descriptor instead.
func (*MealRating) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{23}
}

func (x *MealRating) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *MealRating) GetCafeteriaName() string {
	if x != nil {
		return x.CafeteriaName
	}
	return ""
}

func (x *MealRating) GetMeal() string {
	if x != nil {
		return x.Meal
	}
	return ""
}

func (x *MealRating) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *MealRating) GetCafeteriaVisitedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CafeteriaVisitedAt
	}
	return nil
}

func (x *MealRating) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *MealRating) GetTagRating() []*TagRatingOverview {
	if x != nil {
		return x.TagRating
	}
	return nil
}

type NewCafeteriaRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating             int32                  `protobuf:"varint,1,opt,name=rating,proto3" json:"rating,omitempty"`
	CafeteriaName      string                 `protobuf:"bytes,2,opt,name=cafeteriaName,proto3" json:"cafeteriaName,omitempty"`
	Image              []byte                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Tags               []*TagRating           `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	CafeteriaVisitedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=cafeteriaVisitedAt,proto3" json:"cafeteriaVisitedAt,omitempty"`
	Comment            string                 `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *NewCafeteriaRatingRequest) Reset() {
	*x = NewCafeteriaRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCafeteriaRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCafeteriaRatingRequest) ProtoMessage() {}

func (x *NewCafeteriaRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCafeteriaRatingRequest.ProtoReflect.Descriptor instead.
func (*NewCafeteriaRatingRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{24}
}

func (x *NewCafeteriaRatingRequest) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *NewCafeteriaRatingRequest) GetCafeteriaName() string {
	if x != nil {
		return x.CafeteriaName
	}
	return ""
}

func (x *NewCafeteriaRatingRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *NewCafeteriaRatingRequest) GetTags() []*TagRating {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *NewCafeteriaRatingRequest) GetCafeteriaVisitedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CafeteriaVisitedAt
	}
	return nil
}

func (x *NewCafeteriaRatingRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type NewMealRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating             int32                  `protobuf:"varint,1,opt,name=rating,proto3" json:"rating,omitempty"`
	CafeteriaName      string                 `protobuf:"bytes,2,opt,name=cafeteriaName,proto3" json:"cafeteriaName,omitempty"`
	Meal               string                 `protobuf:"bytes,3,opt,name=meal,proto3" json:"meal,omitempty"`
	Image              []byte                 `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Tags               []*TagRating           `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	CafeteriaVisitedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=cafeteriaVisitedAt,proto3" json:"cafeteriaVisitedAt,omitempty"`
	Comment            string                 `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *NewMealRatingRequest) Reset() {
	*x = NewMealRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMealRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMealRatingRequest) ProtoMessage() {}

func (x *NewMealRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMealRatingRequest.ProtoReflect.Descriptor instead.
func (*NewMealRatingRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{25}
}

func (x *NewMealRatingRequest) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *NewMealRatingRequest) GetCafeteriaName() string {
	if x != nil {
		return x.CafeteriaName
	}
	return ""
}

func (x *NewMealRatingRequest) GetMeal() string {
	if x != nil {
		return x.Meal
	}
	return ""
}

func (x *NewMealRatingRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *NewMealRatingRequest) GetTags() []*TagRating {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *NewMealRatingRequest) GetCafeteriaVisitedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CafeteriaVisitedAt
	}
	return nil
}

func (x *NewMealRatingRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type GetRatingTagsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*TagRatingOverview `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *GetRatingTagsReply) Reset() {
	*x = GetRatingTagsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRatingTagsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRatingTagsReply) ProtoMessage() {}

func (x *GetRatingTagsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRatingTagsReply.ProtoReflect.Descriptor instead.
func (*GetRatingTagsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{26}
}

func (x *GetRatingTagsReply) GetTags() []*TagRatingOverview {
	if x != nil {
		return x.Tags
	}
	return nil
}

type TagRatingOverview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameDE string  `protobuf:"bytes,1,opt,name=nameDE,proto3" json:"nameDE,omitempty"`
	NameEN string  `protobuf:"bytes,2,opt,name=nameEN,proto3" json:"nameEN,omitempty"`
	Rating float64 `protobuf:"fixed64,3,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *TagRatingOverview) Reset() {
	*x = TagRatingOverview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagRatingOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagRatingOverview) ProtoMessage() {}

func (x *TagRatingOverview) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagRatingOverview.ProtoReflect.Descriptor instead.
func (*TagRatingOverview) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{27}
}

func (x *TagRatingOverview) GetNameDE() string {
	if x != nil {
		return x.NameDE
	}
	return ""
}

func (x *TagRatingOverview) GetNameEN() string {
	if x != nil {
		return x.NameEN
	}
	return ""
}

func (x *TagRatingOverview) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type TagRating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag    string  `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Rating float64 `protobuf:"fixed64,2,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *TagRating) Reset() {
	*x = TagRating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagRating) ProtoMessage() {}

func (x *TagRating) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagRating.ProtoReflect.Descriptor instead.
func (*TagRating) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{28}
}

func (x *TagRating) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *TagRating) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type TagRatingsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameDE        string  `protobuf:"bytes,1,opt,name=nameDE,proto3" json:"nameDE,omitempty"`
	NameEN        string  `protobuf:"bytes,2,opt,name=nameEN,proto3" json:"nameEN,omitempty"`
	AverageRating float64 `protobuf:"fixed64,3,opt,name=averageRating,proto3" json:"averageRating,omitempty"`
	MinRating     int32   `protobuf:"varint,4,opt,name=minRating,proto3" json:"minRating,omitempty"`
	MaxRating     int32   `protobuf:"varint,5,opt,name=maxRating,proto3" json:"maxRating,omitempty"`
}

func (x *TagRatingsResult) Reset() {
	*x = TagRatingsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagRatingsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagRatingsResult) ProtoMessage() {}

func (x *TagRatingsResult) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagRatingsResult.ProtoReflect.Descriptor instead.
func (*TagRatingsResult) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{29}
}

func (x *TagRatingsResult) GetNameDE() string {
	if x != nil {
		return x.NameDE
	}
	return ""
}

func (x *TagRatingsResult) GetNameEN() string {
	if x != nil {
		return x.NameEN
	}
	return ""
}

func (x *TagRatingsResult) GetAverageRating() float64 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *TagRatingsResult) GetMinRating() int32 {
	if x != nil {
		return x.MinRating
	}
	return 0
}

func (x *TagRatingsResult) GetMaxRating() int32 {
	if x != nil {
		return x.MaxRating
	}
	return 0
}

type GetCafeteriaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Adress    string  `protobuf:"bytes,2,opt,name=adress,proto3" json:"adress,omitempty"`
	Longitude float64 `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude  float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *GetCafeteriaResponse) Reset() {
	*x = GetCafeteriaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCafeteriaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCafeteriaResponse) ProtoMessage() {}

func (x *GetCafeteriaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCafeteriaResponse.ProtoReflect.Descriptor instead.
func (*GetCafeteriaResponse) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{30}
}

func (x *GetCafeteriaResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCafeteriaResponse) GetAdress() string {
	if x != nil {
		return x.Adress
	}
	return ""
}

func (x *GetCafeteriaResponse) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GetCafeteriaResponse) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type GetRoomScheduleReply_RoomScheduleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Title      string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	EventId    int32                  `protobuf:"varint,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	CourseCode string                 `protobuf:"bytes,5,opt,name=course_code,json=courseCode,proto3" json:"course_code,omitempty"`
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) Reset() {
	*x = GetRoomScheduleReply_RoomScheduleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomScheduleReply_RoomScheduleEvent) ProtoMessage() {}

func (x *GetRoomScheduleReply_RoomScheduleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomScheduleReply_RoomScheduleEvent.ProtoReflect.Descriptor instead.
func (*GetRoomScheduleReply_RoomScheduleEvent) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetEventId() int32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetCourseCode() string {
	if x != nil {
		return x.CourseCode
	}
	return ""
}

type GetRoomMapsReply_Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId       int64  `protobuf:"varint,1,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Scale       int64  `protobuf:"varint,3,opt,name=scale,proto3" json:"scale,omitempty"`
	Width       int64  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height      int64  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetRoomMapsReply_Map) Reset() {
	*x = GetRoomMapsReply_Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomMapsReply_Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomMapsReply_Map) ProtoMessage() {}

func (x *GetRoomMapsReply_Map) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomMapsReply_Map.ProtoReflect.Descriptor instead.
func (*GetRoomMapsReply_Map) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GetRoomMapsReply_Map) GetMapId() int64 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *GetRoomMapsReply_Map) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetRoomMapsReply_Map) GetScale() int64 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *GetRoomMapsReply_Map) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GetRoomMapsReply_Map) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetLocationsReply_Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Lon      string `protobuf:"bytes,3,opt,name=lon,proto3" json:"lon,omitempty"`
	Lat      string `protobuf:"bytes,4,opt,name=lat,proto3" json:"lat,omitempty"`
	Radius   string `protobuf:"bytes,5,opt,name=radius,proto3" json:"radius,omitempty"`
}

func (x *GetLocationsReply_Location) Reset() {
	*x = GetLocationsReply_Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationsReply_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationsReply_Location) ProtoMessage() {}

func (x *GetLocationsReply_Location) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationsReply_Location.ProtoReflect.Descriptor instead.
func (*GetLocationsReply_Location) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetLocationsReply_Location) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *GetLocationsReply_Location) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetLocationsReply_Location) GetLon() string {
	if x != nil {
		return x.Lon
	}
	return ""
}

func (x *GetLocationsReply_Location) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *GetLocationsReply_Location) GetRadius() string {
	if x != nil {
		return x.Radius
	}
	return ""
}

var File_CampusService_proto protoreflect.FileDescriptor

var file_CampusService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x06, 0x41, 0x50, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x6e,
	0x22, 0x3d, 0x0a, 0x09, 0x41, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x40, 0x0a, 0x0a, 0x41, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d,
	0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x22, 0xa3, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xc5,
	0x01, 0x0a, 0x11, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x74, 0x6d, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x74, 0x6d, 0x5a, 0x6f,
	0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x74, 0x6d, 0x5f, 0x65, 0x61, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x75, 0x74, 0x6d, 0x45, 0x61, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x74, 0x6d, 0x5f, 0x6e, 0x6f, 0x72, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x75, 0x74, 0x6d, 0x4e, 0x6f,
	0x72, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x72, 0x63, 0x68, 0x49, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x61,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x4d, 0x61, 0x70, 0x52, 0x04, 0x6d, 0x61, 0x70, 0x73, 0x1a, 0x82, 0x01, 0x0a, 0x03, 0x4d, 0x61,
	0x70, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x31,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xca, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x76, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0x2a,
	0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x33, 0x0a, 0x10, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f,
	0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22,
	0xea, 0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x0f,
	0x4e, 0x65, 0x77, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12,
	0x29, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x4e, 0x0a, 0x0a, 0x4e, 0x65,
	0x77, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xd4, 0x01, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12,
	0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74,
	0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x16, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x4d, 0x65, 0x61, 0x6c, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x65, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xe0, 0x01, 0x0a, 0x17, 0x43, 0x61, 0x66, 0x65,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61,
	0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x22, 0x8a, 0x02, 0x0a, 0x13, 0x4d,
	0x65, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x61, 0x6c, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a,
	0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x67,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x08, 0x6e,
	0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x0f, 0x43, 0x61, 0x66, 0x65,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x66, 0x65,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x4a, 0x0a, 0x12, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x56, 0x69, 0x73, 0x69,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54,
	0x61, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x09, 0x74, 0x61, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x90, 0x02, 0x0a, 0x0a,
	0x4d, 0x65, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x66, 0x65, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x56,
	0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x63, 0x61, 0x66, 0x65,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x09, 0x74, 0x61, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xf9,
	0x01, 0x0a, 0x19, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x66,
	0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x22, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x4a, 0x0a, 0x12, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x63, 0x61,
	0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x88, 0x02, 0x0a, 0x14, 0x4e,
	0x65, 0x77, 0x4d, 0x65, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x65, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x54, 0x61, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x4a, 0x0a, 0x12, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x56, 0x69, 0x73, 0x69,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x54, 0x61, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x5b, 0x0a, 0x11, 0x54, 0x61, 0x67, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x61, 0x6d, 0x65, 0x44, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61,
	0x6d, 0x65, 0x44, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x4e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x4e, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x22, 0x35, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xa4, 0x01, 0x0a, 0x10,
	0x54, 0x61, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x65,
	0x45, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x4e,
	0x12, 0x24, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x22, 0x7c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x32, 0xcb, 0x0e, 0x0a, 0x06, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x12, 0x4d, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65,
	0x77, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12,
	0x09, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x74, 0x6f, 0x70, 0x12, 0x5e, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x77, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x12, 0x0d, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x62, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x68, 0x0a, 0x0b, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x22, 0x17, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x72,
	0x6f, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x62, 0x05, 0x72,
	0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x6a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x15,
	0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x62, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x60, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x73, 0x12,
	0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x10, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x66, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x70, 0x73, 0x3a, 0x01, 0x2a, 0x62, 0x04, 0x6d, 0x61,
	0x70, 0x73, 0x12, 0x7b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c,
	0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x72, 0x6f, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0x7b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2a, 0x22, 0x1d, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f,
	0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49,
	0x64, 0x3a, 0x01, 0x2a, 0x62, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x7b, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x2f, 0x67, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x69, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x65, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x61, 0x6c, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x64, 0x69, 0x73, 0x68, 0x2f, 0x67, 0x65,
	0x74, 0x3a, 0x01, 0x2a, 0x12, 0x86, 0x01, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x66, 0x65,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x22, 0x2d, 0x2f, 0x63, 0x61,
	0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x61,
	0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x2f, 0x6e, 0x65, 0x77, 0x43, 0x61, 0x66, 0x65, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x72, 0x0a,
	0x0d, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x19,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22, 0x23, 0x2f, 0x63, 0x61, 0x66, 0x65,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6d, 0x65, 0x61, 0x6c,
	0x2f, 0x6e, 0x65, 0x77, 0x4d, 0x65, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x3a, 0x01,
	0x2a, 0x12, 0x6e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x4d, 0x65, 0x61, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6d, 0x65, 0x61, 0x6c, 0x2f, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x78, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x54, 0x61, 0x67, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x2f, 0x61, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x12, 0x74, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x2f, 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x73, 0x12, 0x58, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x50, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x68, 0x65, 0x61,
	0x74, 0x6d, 0x61, 0x70, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x61, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x15, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x68, 0x65, 0x61, 0x74, 0x6d, 0x61, 0x70, 0x62,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x30, 0x01, 0x12, 0x5e,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x50, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x50, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x17, 0x2f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x6c, 0x6c,
	0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x62, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x30, 0x01, 0x42, 0x5e,
	0x0a, 0x12, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x75, 0x6d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x42, 0x0e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x41, 0x70, 0x69, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x54, 0x55, 0x4d, 0x2d, 0x44, 0x65, 0x76, 0x2f, 0x43, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x2d, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0xaa, 0x02, 0x0e,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_CampusService_proto_rawDescOnce sync.Once
	file_CampusService_proto_rawDescData = file_CampusService_proto_rawDesc
)

func file_CampusService_proto_rawDescGZIP() []byte {
	file_CampusService_proto_rawDescOnce.Do(func() {
		file_CampusService_proto_rawDescData = protoimpl.X.CompressGZIP(file_CampusService_proto_rawDescData)
	})
	return file_CampusService_proto_rawDescData
}

var file_CampusService_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_CampusService_proto_goTypes = []interface{}{
	(*APName)(nil),                                 // 0: api.APName
	(*AccessPoint)(nil),                            // 1: api.AccessPoint
	(*APRequest)(nil),                              // 2: api.APRequest
	(*APResponse)(nil),                             // 3: api.APResponse
	(*GetRoomScheduleRequest)(nil),                 // 4: api.GetRoomScheduleRequest
	(*GetRoomScheduleReply)(nil),                   // 5: api.GetRoomScheduleReply
	(*GetRoomCoordinatesRequest)(nil),              // 6: api.GetRoomCoordinatesRequest
	(*GetRoomCoordinatesReply)(nil),                // 7: api.GetRoomCoordinatesReply
	(*GetRoomMapsRequest)(nil),                     // 8: api.GetRoomMapsRequest
	(*GetRoomMapsReply)(nil),                       // 9: api.GetRoomMapsReply
	(*GetLocationsRequest)(nil),                    // 10: api.GetLocationsRequest
	(*GetLocationsReply)(nil),                      // 11: api.GetLocationsReply
	(*SearchRoomsRequest)(nil),                     // 12: api.SearchRoomsRequest
	(*SearchRoomsReply)(nil),                       // 13: api.SearchRoomsReply
	(*Room)(nil),                                   // 14: api.Room
	(*NewsSourceArray)(nil),                        // 15: api.NewsSourceArray
	(*NewsSource)(nil),                             // 16: api.NewsSource
	(*GetTopNewsReply)(nil),                        // 17: api.GetTopNewsReply
	(*CafeteriaRatingRequest)(nil),                 // 18: api.CafeteriaRatingRequest
	(*MealRatingsRequest)(nil),                     // 19: api.MealRatingsRequest
	(*CafeteriaRatingResponse)(nil),                // 20: api.CafeteriaRatingResponse
	(*MealRatingsResponse)(nil),                    // 21: api.MealRatingsResponse
	(*CafeteriaRating)(nil),                        // 22: api.CafeteriaRating
	(*MealRating)(nil),                             // 23: api.MealRating
	(*NewCafeteriaRatingRequest)(nil),              // 24: api.NewCafeteriaRatingRequest
	(*NewMealRatingRequest)(nil),                   // 25: api.NewMealRatingRequest
	(*GetRatingTagsReply)(nil),                     // 26: api.GetRatingTagsReply
	(*TagRatingOverview)(nil),                      // 27: api.TagRatingOverview
	(*TagRating)(nil),                              // 28: api.TagRating
	(*TagRatingsResult)(nil),                       // 29: api.TagRatingsResult
	(*GetCafeteriaResponse)(nil),                   // 30: api.GetCafeteriaResponse
	(*GetRoomScheduleReply_RoomScheduleEvent)(nil), // 31: api.GetRoomScheduleReply.RoomScheduleEvent
	(*GetRoomMapsReply_Map)(nil),                   // 32: api.GetRoomMapsReply.Map
	(*GetLocationsReply_Location)(nil),             // 33: api.GetLocationsReply.Location
	(*timestamppb.Timestamp)(nil),                  // 34: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                          // 35: google.protobuf.Empty
}
var file_CampusService_proto_depIdxs = []int32{
	1,  // 0: api.APResponse.accesspoint:type_name -> api.AccessPoint
	34, // 1: api.GetRoomScheduleRequest.start:type_name -> google.protobuf.Timestamp
	34, // 2: api.GetRoomScheduleRequest.end:type_name -> google.protobuf.Timestamp
	31, // 3: api.GetRoomScheduleReply.events:type_name -> api.GetRoomScheduleReply.RoomScheduleEvent
	32, // 4: api.GetRoomMapsReply.maps:type_name -> api.GetRoomMapsReply.Map
	33, // 5: api.GetLocationsReply.locations:type_name -> api.GetLocationsReply.Location
	14, // 6: api.SearchRoomsReply.rooms:type_name -> api.Room
	16, // 7: api.NewsSourceArray.sources:type_name -> api.NewsSource
	34, // 8: api.GetTopNewsReply.created:type_name -> google.protobuf.Timestamp
	34, // 9: api.GetTopNewsReply.from:type_name -> google.protobuf.Timestamp
	34, // 10: api.GetTopNewsReply.to:type_name -> google.protobuf.Timestamp
	34, // 11: api.CafeteriaRatingRequest.from:type_name -> google.protobuf.Timestamp
	34, // 12: api.CafeteriaRatingRequest.to:type_name -> google.protobuf.Timestamp
	34, // 13: api.MealRatingsRequest.from:type_name -> google.protobuf.Timestamp
	34, // 14: api.MealRatingsRequest.to:type_name -> google.protobuf.Timestamp
	22, // 15: api.CafeteriaRatingResponse.rating:type_name -> api.CafeteriaRating
	29, // 16: api.CafeteriaRatingResponse.ratingTags:type_name -> api.TagRatingsResult
	23, // 17: api.MealRatingsResponse.rating:type_name -> api.MealRating
	29, // 18: api.MealRatingsResponse.ratingTags:type_name -> api.TagRatingsResult
	29, // 19: api.MealRatingsResponse.nameTags:type_name -> api.TagRatingsResult
	34, // 20: api.CafeteriaRating.cafeteriaVisitedAt:type_name -> google.protobuf.Timestamp
	27, // 21: api.CafeteriaRating.tagRating:type_name -> api.TagRatingOverview
	34, // 22: api.MealRating.cafeteriaVisitedAt:type_name -> google.protobuf.Timestamp
	27, // 23: api.MealRating.tagRating:type_name -> api.TagRatingOverview
	28, // 24: api.NewCafeteriaRatingRequest.tags:type_name -> api.TagRating
	34, // 25: api.NewCafeteriaRatingRequest.cafeteriaVisitedAt:type_name -> google.protobuf.Timestamp
	28, // 26: api.NewMealRatingRequest.tags:type_name -> api.TagRating
	34, // 27: api.NewMealRatingRequest.cafeteriaVisitedAt:type_name -> google.protobuf.Timestamp
	27, // 28: api.GetRatingTagsReply.tags:type_name -> api.TagRatingOverview
	34, // 29: api.GetRoomScheduleReply.RoomScheduleEvent.start:type_name -> google.protobuf.Timestamp
	34, // 30: api.GetRoomScheduleReply.RoomScheduleEvent.end:type_name -> google.protobuf.Timestamp
	35, // 31: api.Campus.GetTopNews:input_type -> google.protobuf.Empty
	35, // 32: api.Campus.GetNewsSources:input_type -> google.protobuf.Empty
	12, // 33: api.Campus.SearchRooms:input_type -> api.SearchRoomsRequest
	10, // 34: api.Campus.GetLocations:input_type -> api.GetLocationsRequest
	8,  // 35: api.Campus.GetRoomMaps:input_type -> api.GetRoomMapsRequest
	6,  // 36: api.Campus.GetRoomCoordinates:input_type -> api.GetRoomCoordinatesRequest
	4,  // 37: api.Campus.GetRoomSchedule:input_type -> api.GetRoomScheduleRequest
	18, // 38: api.Campus.GetCafeteriaRatings:input_type -> api.CafeteriaRatingRequest
	19, // 39: api.Campus.GetMealRatings:input_type -> api.MealRatingsRequest
	24, // 40: api.Campus.NewCafeteriaRating:input_type -> api.NewCafeteriaRatingRequest
	25, // 41: api.Campus.NewMealRating:input_type -> api.NewMealRatingRequest
	35, // 42: api.Campus.GetAvailableMealTags:input_type -> google.protobuf.Empty
	35, // 43: api.Campus.GetAvailableCafeteriaTags:input_type -> google.protobuf.Empty
	35, // 44: api.Campus.GetCafeterias:input_type -> google.protobuf.Empty
	2,  // 45: api.Campus.GetAccessPoint:input_type -> api.APRequest
	2,  // 46: api.Campus.ListAccessPoints:input_type -> api.APRequest
	35, // 47: api.Campus.ListAllAPNames:input_type -> google.protobuf.Empty
	17, // 48: api.Campus.GetTopNews:output_type -> api.GetTopNewsReply
	15, // 49: api.Campus.GetNewsSources:output_type -> api.NewsSourceArray
	13, // 50: api.Campus.SearchRooms:output_type -> api.SearchRoomsReply
	11, // 51: api.Campus.GetLocations:output_type -> api.GetLocationsReply
	9,  // 52: api.Campus.GetRoomMaps:output_type -> api.GetRoomMapsReply
	7,  // 53: api.Campus.GetRoomCoordinates:output_type -> api.GetRoomCoordinatesReply
	5,  // 54: api.Campus.GetRoomSchedule:output_type -> api.GetRoomScheduleReply
	20, // 55: api.Campus.GetCafeteriaRatings:output_type -> api.CafeteriaRatingResponse
	21, // 56: api.Campus.GetMealRatings:output_type -> api.MealRatingsResponse
	35, // 57: api.Campus.NewCafeteriaRating:output_type -> google.protobuf.Empty
	35, // 58: api.Campus.NewMealRating:output_type -> google.protobuf.Empty
	26, // 59: api.Campus.GetAvailableMealTags:output_type -> api.GetRatingTagsReply
	26, // 60: api.Campus.GetAvailableCafeteriaTags:output_type -> api.GetRatingTagsReply
	30, // 61: api.Campus.GetCafeterias:output_type -> api.GetCafeteriaResponse
	1,  // 62: api.Campus.GetAccessPoint:output_type -> api.AccessPoint
	3,  // 63: api.Campus.ListAccessPoints:output_type -> api.APResponse
	0,  // 64: api.Campus.ListAllAPNames:output_type -> api.APName
	48, // [48:65] is the sub-list for method output_type
	31, // [31:48] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_CampusService_proto_init() }
func file_CampusService_proto_init() {
	if File_CampusService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_CampusService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomScheduleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomCoordinatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomCoordinatesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomMapsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomMapsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRoomsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRoomsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsSourceArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopNewsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CafeteriaRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MealRatingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CafeteriaRatingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MealRatingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CafeteriaRating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MealRating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCafeteriaRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMealRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRatingTagsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagRatingOverview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagRating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagRatingsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCafeteriaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomScheduleReply_RoomScheduleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomMapsReply_Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationsReply_Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_CampusService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_CampusService_proto_goTypes,
		DependencyIndexes: file_CampusService_proto_depIdxs,
		MessageInfos:      file_CampusService_proto_msgTypes,
	}.Build()
	File_CampusService_proto = out.File
	file_CampusService_proto_rawDesc = nil
	file_CampusService_proto_goTypes = nil
	file_CampusService_proto_depIdxs = nil
}
