// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: CampusService.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRoomScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room  int32                  `protobuf:"varint,1,opt,name=room,proto3" json:"room,omitempty"`
	Start *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *GetRoomScheduleRequest) Reset() {
	*x = GetRoomScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomScheduleRequest) ProtoMessage() {}

func (x *GetRoomScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetRoomScheduleRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{0}
}

func (x *GetRoomScheduleRequest) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *GetRoomScheduleRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetRoomScheduleRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type GetRoomScheduleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*GetRoomScheduleReply_RoomScheduleEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetRoomScheduleReply) Reset() {
	*x = GetRoomScheduleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomScheduleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomScheduleReply) ProtoMessage() {}

func (x *GetRoomScheduleReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomScheduleReply.ProtoReflect.Descriptor instead.
func (*GetRoomScheduleReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{1}
}

func (x *GetRoomScheduleReply) GetEvents() []*GetRoomScheduleReply_RoomScheduleEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetRoomCoordinatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArchId string `protobuf:"bytes,1,opt,name=arch_id,json=archId,proto3" json:"arch_id,omitempty"`
}

func (x *GetRoomCoordinatesRequest) Reset() {
	*x = GetRoomCoordinatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomCoordinatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomCoordinatesRequest) ProtoMessage() {}

func (x *GetRoomCoordinatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomCoordinatesRequest.ProtoReflect.Descriptor instead.
func (*GetRoomCoordinatesRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{2}
}

func (x *GetRoomCoordinatesRequest) GetArchId() string {
	if x != nil {
		return x.ArchId
	}
	return ""
}

type GetRoomCoordinatesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UtmZone     string  `protobuf:"bytes,1,opt,name=utm_zone,json=utmZone,proto3" json:"utm_zone,omitempty"`
	UtmEasting  float32 `protobuf:"fixed32,2,opt,name=utm_easting,json=utmEasting,proto3" json:"utm_easting,omitempty"`
	UtmNorthing float32 `protobuf:"fixed32,3,opt,name=utm_northing,json=utmNorthing,proto3" json:"utm_northing,omitempty"`
}

func (x *GetRoomCoordinatesReply) Reset() {
	*x = GetRoomCoordinatesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomCoordinatesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomCoordinatesReply) ProtoMessage() {}

func (x *GetRoomCoordinatesReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomCoordinatesReply.ProtoReflect.Descriptor instead.
func (*GetRoomCoordinatesReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{3}
}

func (x *GetRoomCoordinatesReply) GetUtmZone() string {
	if x != nil {
		return x.UtmZone
	}
	return ""
}

func (x *GetRoomCoordinatesReply) GetUtmEasting() float32 {
	if x != nil {
		return x.UtmEasting
	}
	return 0
}

func (x *GetRoomCoordinatesReply) GetUtmNorthing() float32 {
	if x != nil {
		return x.UtmNorthing
	}
	return 0
}

type GetRoomMapsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArchId string `protobuf:"bytes,1,opt,name=arch_id,json=archId,proto3" json:"arch_id,omitempty"`
}

func (x *GetRoomMapsRequest) Reset() {
	*x = GetRoomMapsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomMapsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomMapsRequest) ProtoMessage() {}

func (x *GetRoomMapsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomMapsRequest.ProtoReflect.Descriptor instead.
func (*GetRoomMapsRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{4}
}

func (x *GetRoomMapsRequest) GetArchId() string {
	if x != nil {
		return x.ArchId
	}
	return ""
}

type GetRoomMapsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Maps []*GetRoomMapsReply_Map `protobuf:"bytes,1,rep,name=maps,proto3" json:"maps,omitempty"`
}

func (x *GetRoomMapsReply) Reset() {
	*x = GetRoomMapsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomMapsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomMapsReply) ProtoMessage() {}

func (x *GetRoomMapsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomMapsReply.ProtoReflect.Descriptor instead.
func (*GetRoomMapsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{5}
}

func (x *GetRoomMapsReply) GetMaps() []*GetRoomMapsReply_Map {
	if x != nil {
		return x.Maps
	}
	return nil
}

type GetLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *GetLocationsRequest) Reset() {
	*x = GetLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationsRequest) ProtoMessage() {}

func (x *GetLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationsRequest.ProtoReflect.Descriptor instead.
func (*GetLocationsRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{6}
}

func (x *GetLocationsRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type GetLocationsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*GetLocationsReply_Location `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *GetLocationsReply) Reset() {
	*x = GetLocationsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationsReply) ProtoMessage() {}

func (x *GetLocationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationsReply.ProtoReflect.Descriptor instead.
func (*GetLocationsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{7}
}

func (x *GetLocationsReply) GetLocations() []*GetLocationsReply_Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type SearchRoomsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchRoomsRequest) Reset() {
	*x = SearchRoomsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomsRequest) ProtoMessage() {}

func (x *SearchRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomsRequest.ProtoReflect.Descriptor instead.
func (*SearchRoomsRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{8}
}

func (x *SearchRoomsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchRoomsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*Room `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *SearchRoomsReply) Reset() {
	*x = SearchRoomsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoomsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomsReply) ProtoMessage() {}

func (x *SearchRoomsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomsReply.ProtoReflect.Descriptor instead.
func (*SearchRoomsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{9}
}

func (x *SearchRoomsReply) GetRooms() []*Room {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId     int32  `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	RoomCode   string `protobuf:"bytes,2,opt,name=room_code,json=roomCode,proto3" json:"room_code,omitempty"`
	BuildingNr string `protobuf:"bytes,3,opt,name=building_nr,json=buildingNr,proto3" json:"building_nr,omitempty"`
	ArchId     string `protobuf:"bytes,4,opt,name=arch_id,json=archId,proto3" json:"arch_id,omitempty"`
	Info       string `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	Address    string `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Purpose    string `protobuf:"bytes,7,opt,name=purpose,proto3" json:"purpose,omitempty"`
	Campus     string `protobuf:"bytes,8,opt,name=campus,proto3" json:"campus,omitempty"`
	Name       string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{10}
}

func (x *Room) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Room) GetRoomCode() string {
	if x != nil {
		return x.RoomCode
	}
	return ""
}

func (x *Room) GetBuildingNr() string {
	if x != nil {
		return x.BuildingNr
	}
	return ""
}

func (x *Room) GetArchId() string {
	if x != nil {
		return x.ArchId
	}
	return ""
}

func (x *Room) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *Room) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Room) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *Room) GetCampus() string {
	if x != nil {
		return x.Campus
	}
	return ""
}

func (x *Room) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type NewsSourceArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sources []*NewsSource `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
}

func (x *NewsSourceArray) Reset() {
	*x = NewsSourceArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsSourceArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsSourceArray) ProtoMessage() {}

func (x *NewsSourceArray) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsSourceArray.ProtoReflect.Descriptor instead.
func (*NewsSourceArray) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{11}
}

func (x *NewsSourceArray) GetSources() []*NewsSource {
	if x != nil {
		return x.Sources
	}
	return nil
}

type NewsSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Icon   string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *NewsSource) Reset() {
	*x = NewsSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsSource) ProtoMessage() {}

func (x *NewsSource) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsSource.ProtoReflect.Descriptor instead.
func (*NewsSource) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{12}
}

func (x *NewsSource) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *NewsSource) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewsSource) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type GetTopNewsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl string                 `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Link     string                 `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	Created  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	From     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	To       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GetTopNewsReply) Reset() {
	*x = GetTopNewsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopNewsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopNewsReply) ProtoMessage() {}

func (x *GetTopNewsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopNewsReply.ProtoReflect.Descriptor instead.
func (*GetTopNewsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{13}
}

func (x *GetTopNewsReply) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *GetTopNewsReply) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *GetTopNewsReply) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *GetTopNewsReply) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetTopNewsReply) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type CafeteriaRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cafeteriaId Mandatory Name of the cafeteria (EAT-API naming scheme "MENSA_GARCHING")
	CafeteriaId string `protobuf:"bytes,1,opt,name=cafeteriaId,proto3" json:"cafeteriaId,omitempty"`
	// Optional Parameter to define an interval for the ratings (Lower bound)
	From *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	// Optional Parameter to define an interval for the ratings (Upper bound)
	To *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	// Optional Parameter defines how many ratings are queried. If all ratings should be queried, enter "-1"
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *CafeteriaRatingRequest) Reset() {
	*x = CafeteriaRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CafeteriaRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CafeteriaRatingRequest) ProtoMessage() {}

func (x *CafeteriaRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CafeteriaRatingRequest.ProtoReflect.Descriptor instead.
func (*CafeteriaRatingRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{14}
}

func (x *CafeteriaRatingRequest) GetCafeteriaId() string {
	if x != nil {
		return x.CafeteriaId
	}
	return ""
}

func (x *CafeteriaRatingRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *CafeteriaRatingRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *CafeteriaRatingRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DishRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Mandatory Name of the cafeteria (EAT-API naming scheme "MENSA_GARCHING")
	CafeteriaId string `protobuf:"bytes,1,opt,name=cafeteriaId,proto3" json:"cafeteriaId,omitempty"`
	// Mandatory Name of the dish (EAT-API naming scheme) Must be available int the given mensa
	Dish string `protobuf:"bytes,2,opt,name=dish,proto3" json:"dish,omitempty"`
	// Optional Parameter to define an interval for the ratings (Lower bound)
	From *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// Optional Parameter to define an interval for the ratings (Upper bound)
	To *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	// Optional Parameter defines how many ratings are queried. If all ratings should be queried, enter "-1"
	Limit int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *DishRatingRequest) Reset() {
	*x = DishRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishRatingRequest) ProtoMessage() {}

func (x *DishRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishRatingRequest.ProtoReflect.Descriptor instead.
func (*DishRatingRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{15}
}

func (x *DishRatingRequest) GetCafeteriaId() string {
	if x != nil {
		return x.CafeteriaId
	}
	return ""
}

func (x *DishRatingRequest) GetDish() string {
	if x != nil {
		return x.Dish
	}
	return ""
}

func (x *DishRatingRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *DishRatingRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *DishRatingRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CafeteriaRatingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating     []*SingleRatingReply `protobuf:"bytes,1,rep,name=rating,proto3" json:"rating,omitempty"`
	Avg        float64              `protobuf:"fixed64,2,opt,name=avg,proto3" json:"avg,omitempty"`
	Std        float64              `protobuf:"fixed64,3,opt,name=std,proto3" json:"std,omitempty"`
	Min        int32                `protobuf:"varint,4,opt,name=min,proto3" json:"min,omitempty"`
	Max        int32                `protobuf:"varint,5,opt,name=max,proto3" json:"max,omitempty"`
	RatingTags []*RatingTagResult   `protobuf:"bytes,6,rep,name=ratingTags,proto3" json:"ratingTags,omitempty"`
}

func (x *CafeteriaRatingReply) Reset() {
	*x = CafeteriaRatingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CafeteriaRatingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CafeteriaRatingReply) ProtoMessage() {}

func (x *CafeteriaRatingReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CafeteriaRatingReply.ProtoReflect.Descriptor instead.
func (*CafeteriaRatingReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{16}
}

func (x *CafeteriaRatingReply) GetRating() []*SingleRatingReply {
	if x != nil {
		return x.Rating
	}
	return nil
}

func (x *CafeteriaRatingReply) GetAvg() float64 {
	if x != nil {
		return x.Avg
	}
	return 0
}

func (x *CafeteriaRatingReply) GetStd() float64 {
	if x != nil {
		return x.Std
	}
	return 0
}

func (x *CafeteriaRatingReply) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *CafeteriaRatingReply) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *CafeteriaRatingReply) GetRatingTags() []*RatingTagResult {
	if x != nil {
		return x.RatingTags
	}
	return nil
}

type DishRatingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating     []*SingleRatingReply `protobuf:"bytes,1,rep,name=rating,proto3" json:"rating,omitempty"`
	Avg        float64              `protobuf:"fixed64,2,opt,name=avg,proto3" json:"avg,omitempty"`
	Std        float64              `protobuf:"fixed64,3,opt,name=std,proto3" json:"std,omitempty"`
	Min        int32                `protobuf:"varint,4,opt,name=min,proto3" json:"min,omitempty"`
	Max        int32                `protobuf:"varint,5,opt,name=max,proto3" json:"max,omitempty"`
	RatingTags []*RatingTagResult   `protobuf:"bytes,6,rep,name=ratingTags,proto3" json:"ratingTags,omitempty"`
	NameTags   []*RatingTagResult   `protobuf:"bytes,7,rep,name=nameTags,proto3" json:"nameTags,omitempty"`
}

func (x *DishRatingReply) Reset() {
	*x = DishRatingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishRatingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishRatingReply) ProtoMessage() {}

func (x *DishRatingReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishRatingReply.ProtoReflect.Descriptor instead.
func (*DishRatingReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{17}
}

func (x *DishRatingReply) GetRating() []*SingleRatingReply {
	if x != nil {
		return x.Rating
	}
	return nil
}

func (x *DishRatingReply) GetAvg() float64 {
	if x != nil {
		return x.Avg
	}
	return 0
}

func (x *DishRatingReply) GetStd() float64 {
	if x != nil {
		return x.Std
	}
	return 0
}

func (x *DishRatingReply) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *DishRatingReply) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *DishRatingReply) GetRatingTags() []*RatingTagResult {
	if x != nil {
		return x.RatingTags
	}
	return nil
}

func (x *DishRatingReply) GetNameTags() []*RatingTagResult {
	if x != nil {
		return x.NameTags
	}
	return nil
}

type SingleRatingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// number in the range 1-5
	Points int32 `protobuf:"varint,1,opt,name=points,proto3" json:"points,omitempty"`
	// Optional JPEG image in Base64
	Image []byte `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	// Optional comment (max 256 chars)
	Comment    string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	RatingTags []*RatingTagNewRequest `protobuf:"bytes,4,rep,name=ratingTags,proto3" json:"ratingTags,omitempty"`
	Visited    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=visited,proto3" json:"visited,omitempty"`
}

func (x *SingleRatingReply) Reset() {
	*x = SingleRatingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleRatingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleRatingReply) ProtoMessage() {}

func (x *SingleRatingReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleRatingReply.ProtoReflect.Descriptor instead.
func (*SingleRatingReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{18}
}

func (x *SingleRatingReply) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *SingleRatingReply) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *SingleRatingReply) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *SingleRatingReply) GetRatingTags() []*RatingTagNewRequest {
	if x != nil {
		return x.RatingTags
	}
	return nil
}

func (x *SingleRatingReply) GetVisited() *timestamppb.Timestamp {
	if x != nil {
		return x.Visited
	}
	return nil
}

type NewCafeteriaRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// number in the range 1-5
	Points      int32  `protobuf:"varint,1,opt,name=points,proto3" json:"points,omitempty"`
	CafeteriaId string `protobuf:"bytes,2,opt,name=cafeteriaId,proto3" json:"cafeteriaId,omitempty"`
	Image       []byte `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// Optional list of tag ratings add as many tags with a rating (1-5) of the list of cafeteriaRatingTags
	RatingTags []*RatingTag `protobuf:"bytes,4,rep,name=ratingTags,proto3" json:"ratingTags,omitempty"`
	// Optional comment (max 256 chars)
	Comment string `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *NewCafeteriaRatingRequest) Reset() {
	*x = NewCafeteriaRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCafeteriaRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCafeteriaRatingRequest) ProtoMessage() {}

func (x *NewCafeteriaRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCafeteriaRatingRequest.ProtoReflect.Descriptor instead.
func (*NewCafeteriaRatingRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{19}
}

func (x *NewCafeteriaRatingRequest) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *NewCafeteriaRatingRequest) GetCafeteriaId() string {
	if x != nil {
		return x.CafeteriaId
	}
	return ""
}

func (x *NewCafeteriaRatingRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *NewCafeteriaRatingRequest) GetRatingTags() []*RatingTag {
	if x != nil {
		return x.RatingTags
	}
	return nil
}

func (x *NewCafeteriaRatingRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type NewDishRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// number in the range 1-5
	Points int32 `protobuf:"varint,1,opt,name=points,proto3" json:"points,omitempty"`
	// Mandatory Name of the dish (EAT-API naming scheme "MENSA_GARCHING") Must be available int the given mensa
	CafeteriaId string `protobuf:"bytes,2,opt,name=cafeteriaId,proto3" json:"cafeteriaId,omitempty"`
	// Mandatory Name of the dish (EAT-API naming scheme) Must be available int the given mensa
	Dish string `protobuf:"bytes,3,opt,name=dish,proto3" json:"dish,omitempty"`
	// Optional JPEG image in Base64
	Image []byte `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	// Optional list of tag ratings add as many tags with a rating (1-5) of the list of dishRatingTags
	RatingTags []*RatingTag `protobuf:"bytes,5,rep,name=ratingTags,proto3" json:"ratingTags,omitempty"`
	// Optional comment (max 256 chars)
	Comment string `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *NewDishRatingRequest) Reset() {
	*x = NewDishRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewDishRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewDishRatingRequest) ProtoMessage() {}

func (x *NewDishRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewDishRatingRequest.ProtoReflect.Descriptor instead.
func (*NewDishRatingRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{20}
}

func (x *NewDishRatingRequest) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *NewDishRatingRequest) GetCafeteriaId() string {
	if x != nil {
		return x.CafeteriaId
	}
	return ""
}

func (x *NewDishRatingRequest) GetDish() string {
	if x != nil {
		return x.Dish
	}
	return ""
}

func (x *NewDishRatingRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *NewDishRatingRequest) GetRatingTags() []*RatingTag {
	if x != nil {
		return x.RatingTags
	}
	return nil
}

func (x *NewDishRatingRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type GetTagsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RatingTags []*TagsOverview `protobuf:"bytes,1,rep,name=ratingTags,proto3" json:"ratingTags,omitempty"`
}

func (x *GetTagsReply) Reset() {
	*x = GetTagsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagsReply) ProtoMessage() {}

func (x *GetTagsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagsReply.ProtoReflect.Descriptor instead.
func (*GetTagsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{21}
}

func (x *GetTagsReply) GetRatingTags() []*TagsOverview {
	if x != nil {
		return x.RatingTags
	}
	return nil
}

type TagsOverview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId int32  `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
	De    string `protobuf:"bytes,2,opt,name=de,proto3" json:"de,omitempty"`
	En    string `protobuf:"bytes,3,opt,name=en,proto3" json:"en,omitempty"`
}

func (x *TagsOverview) Reset() {
	*x = TagsOverview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagsOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagsOverview) ProtoMessage() {}

func (x *TagsOverview) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagsOverview.ProtoReflect.Descriptor instead.
func (*TagsOverview) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{22}
}

func (x *TagsOverview) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *TagsOverview) GetDe() string {
	if x != nil {
		return x.De
	}
	return ""
}

func (x *TagsOverview) GetEn() string {
	if x != nil {
		return x.En
	}
	return ""
}

type RatingTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId  int32   `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
	Points float64 `protobuf:"fixed64,2,opt,name=points,proto3" json:"points,omitempty"`
}

func (x *RatingTag) Reset() {
	*x = RatingTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingTag) ProtoMessage() {}

func (x *RatingTag) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingTag.ProtoReflect.Descriptor instead.
func (*RatingTag) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{23}
}

func (x *RatingTag) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *RatingTag) GetPoints() float64 {
	if x != nil {
		return x.Points
	}
	return 0
}

type RatingTagNewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId  int32 `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
	Points int32 `protobuf:"varint,2,opt,name=points,proto3" json:"points,omitempty"`
}

func (x *RatingTagNewRequest) Reset() {
	*x = RatingTagNewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingTagNewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingTagNewRequest) ProtoMessage() {}

func (x *RatingTagNewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingTagNewRequest.ProtoReflect.Descriptor instead.
func (*RatingTagNewRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{24}
}

func (x *RatingTagNewRequest) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *RatingTagNewRequest) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

type RatingTagResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId int32   `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
	Avg   float64 `protobuf:"fixed64,2,opt,name=avg,proto3" json:"avg,omitempty"`
	Std   float64 `protobuf:"fixed64,3,opt,name=std,proto3" json:"std,omitempty"`
	Min   int32   `protobuf:"varint,4,opt,name=min,proto3" json:"min,omitempty"`
	Max   int32   `protobuf:"varint,5,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *RatingTagResult) Reset() {
	*x = RatingTagResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingTagResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingTagResult) ProtoMessage() {}

func (x *RatingTagResult) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingTagResult.ProtoReflect.Descriptor instead.
func (*RatingTagResult) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{25}
}

func (x *RatingTagResult) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *RatingTagResult) GetAvg() float64 {
	if x != nil {
		return x.Avg
	}
	return 0
}

func (x *RatingTagResult) GetStd() float64 {
	if x != nil {
		return x.Std
	}
	return 0
}

func (x *RatingTagResult) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *RatingTagResult) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

type GetCafeteriaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cafeteria []*Cafeteria `protobuf:"bytes,1,rep,name=cafeteria,proto3" json:"cafeteria,omitempty"`
}

func (x *GetCafeteriaReply) Reset() {
	*x = GetCafeteriaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCafeteriaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCafeteriaReply) ProtoMessage() {}

func (x *GetCafeteriaReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCafeteriaReply.ProtoReflect.Descriptor instead.
func (*GetCafeteriaReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{26}
}

func (x *GetCafeteriaReply) GetCafeteria() []*Cafeteria {
	if x != nil {
		return x.Cafeteria
	}
	return nil
}

type Cafeteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address   string  `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Longitude float64 `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude  float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *Cafeteria) Reset() {
	*x = Cafeteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cafeteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cafeteria) ProtoMessage() {}

func (x *Cafeteria) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cafeteria.ProtoReflect.Descriptor instead.
func (*Cafeteria) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{27}
}

func (x *Cafeteria) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cafeteria) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Cafeteria) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Cafeteria) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type GetDishesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CafeteriaId string `protobuf:"bytes,1,opt,name=cafeteriaId,proto3" json:"cafeteriaId,omitempty"`
	// >=2022 until the current year
	Year int32 `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
	// range 1 - 53
	Week int32 `protobuf:"varint,3,opt,name=week,proto3" json:"week,omitempty"`
	// range 0 (Monday) - 4 (Friday)
	Day int32 `protobuf:"varint,4,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *GetDishesRequest) Reset() {
	*x = GetDishesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDishesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDishesRequest) ProtoMessage() {}

func (x *GetDishesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDishesRequest.ProtoReflect.Descriptor instead.
func (*GetDishesRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{28}
}

func (x *GetDishesRequest) GetCafeteriaId() string {
	if x != nil {
		return x.CafeteriaId
	}
	return ""
}

func (x *GetDishesRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *GetDishesRequest) GetWeek() int32 {
	if x != nil {
		return x.Week
	}
	return 0
}

func (x *GetDishesRequest) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type GetDishesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dish []string `protobuf:"bytes,1,rep,name=dish,proto3" json:"dish,omitempty"`
}

func (x *GetDishesReply) Reset() {
	*x = GetDishesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDishesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDishesReply) ProtoMessage() {}

func (x *GetDishesReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDishesReply.ProtoReflect.Descriptor instead.
func (*GetDishesReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{29}
}

func (x *GetDishesReply) GetDish() []string {
	if x != nil {
		return x.Dish
	}
	return nil
}

type GetResponsiblePersonReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponsiblePerson []*ResponsiblePersonElement `protobuf:"bytes,1,rep,name=responsiblePerson,proto3" json:"responsiblePerson,omitempty"`
}

func (x *GetResponsiblePersonReply) Reset() {
	*x = GetResponsiblePersonReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponsiblePersonReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponsiblePersonReply) ProtoMessage() {}

func (x *GetResponsiblePersonReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponsiblePersonReply.ProtoReflect.Descriptor instead.
func (*GetResponsiblePersonReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{30}
}

func (x *GetResponsiblePersonReply) GetResponsiblePerson() []*ResponsiblePersonElement {
	if x != nil {
		return x.ResponsiblePerson
	}
	return nil
}

type ResponsiblePersonElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Telephone string `protobuf:"bytes,2,opt,name=telephone,proto3" json:"telephone,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Faculty   string `protobuf:"bytes,4,opt,name=faculty,proto3" json:"faculty,omitempty"`
	TumID     string `protobuf:"bytes,5,opt,name=tumID,proto3" json:"tumID,omitempty"`
}

func (x *ResponsiblePersonElement) Reset() {
	*x = ResponsiblePersonElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsiblePersonElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsiblePersonElement) ProtoMessage() {}

func (x *ResponsiblePersonElement) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsiblePersonElement.ProtoReflect.Descriptor instead.
func (*ResponsiblePersonElement) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{31}
}

func (x *ResponsiblePersonElement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResponsiblePersonElement) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *ResponsiblePersonElement) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ResponsiblePersonElement) GetFaculty() string {
	if x != nil {
		return x.Faculty
	}
	return ""
}

func (x *ResponsiblePersonElement) GetTumID() string {
	if x != nil {
		return x.TumID
	}
	return ""
}

type GetBuilding2GpsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Building2Gps []*Building2GpsElement `protobuf:"bytes,1,rep,name=building2Gps,proto3" json:"building2Gps,omitempty"`
}

func (x *GetBuilding2GpsReply) Reset() {
	*x = GetBuilding2GpsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuilding2GpsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuilding2GpsReply) ProtoMessage() {}

func (x *GetBuilding2GpsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuilding2GpsReply.ProtoReflect.Descriptor instead.
func (*GetBuilding2GpsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{32}
}

func (x *GetBuilding2GpsReply) GetBuilding2Gps() []*Building2GpsElement {
	if x != nil {
		return x.Building2Gps
	}
	return nil
}

type Building2GpsElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Latitude  string `protobuf:"bytes,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude string `protobuf:"bytes,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Building2GpsElement) Reset() {
	*x = Building2GpsElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Building2GpsElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Building2GpsElement) ProtoMessage() {}

func (x *Building2GpsElement) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Building2GpsElement.ProtoReflect.Descriptor instead.
func (*Building2GpsElement) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{33}
}

func (x *Building2GpsElement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Building2GpsElement) GetLatitude() string {
	if x != nil {
		return x.Latitude
	}
	return ""
}

func (x *Building2GpsElement) GetLongitude() string {
	if x != nil {
		return x.Longitude
	}
	return ""
}

type GetAreaFacilitiesByBuildingNrReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaFacilitiesByBuildingNr []*RoomInformationElement `protobuf:"bytes,1,rep,name=areaFacilitiesByBuildingNr,proto3" json:"areaFacilitiesByBuildingNr,omitempty"`
}

func (x *GetAreaFacilitiesByBuildingNrReply) Reset() {
	*x = GetAreaFacilitiesByBuildingNrReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAreaFacilitiesByBuildingNrReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAreaFacilitiesByBuildingNrReply) ProtoMessage() {}

func (x *GetAreaFacilitiesByBuildingNrReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAreaFacilitiesByBuildingNrReply.ProtoReflect.Descriptor instead.
func (*GetAreaFacilitiesByBuildingNrReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{34}
}

func (x *GetAreaFacilitiesByBuildingNrReply) GetAreaFacilitiesByBuildingNr() []*RoomInformationElement {
	if x != nil {
		return x.AreaFacilitiesByBuildingNr
	}
	return nil
}

type GetAreaFacilitiesByBuildingNrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildingNr string `protobuf:"bytes,1,opt,name=building_nr,json=buildingNr,proto3" json:"building_nr,omitempty"`
}

func (x *GetAreaFacilitiesByBuildingNrRequest) Reset() {
	*x = GetAreaFacilitiesByBuildingNrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAreaFacilitiesByBuildingNrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAreaFacilitiesByBuildingNrRequest) ProtoMessage() {}

func (x *GetAreaFacilitiesByBuildingNrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAreaFacilitiesByBuildingNrRequest.ProtoReflect.Descriptor instead.
func (*GetAreaFacilitiesByBuildingNrRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{35}
}

func (x *GetAreaFacilitiesByBuildingNrRequest) GetBuildingNr() string {
	if x != nil {
		return x.BuildingNr
	}
	return ""
}

type GetListOfToiletsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfToilets []*RoomInformationElement `protobuf:"bytes,1,rep,name=listOfToilets,proto3" json:"listOfToilets,omitempty"`
}

func (x *GetListOfToiletsReply) Reset() {
	*x = GetListOfToiletsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListOfToiletsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListOfToiletsReply) ProtoMessage() {}

func (x *GetListOfToiletsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListOfToiletsReply.ProtoReflect.Descriptor instead.
func (*GetListOfToiletsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{36}
}

func (x *GetListOfToiletsReply) GetListOfToilets() []*RoomInformationElement {
	if x != nil {
		return x.ListOfToilets
	}
	return nil
}

type RoomInformationElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId     int32  `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	RoomCode   string `protobuf:"bytes,2,opt,name=room_code,json=roomCode,proto3" json:"room_code,omitempty"`
	BuildingNr string `protobuf:"bytes,3,opt,name=building_nr,json=buildingNr,proto3" json:"building_nr,omitempty"`
	ArchId     string `protobuf:"bytes,4,opt,name=arch_id,json=archId,proto3" json:"arch_id,omitempty"`
	Info       string `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	Address    string `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Purpose    string `protobuf:"bytes,7,opt,name=purpose,proto3" json:"purpose,omitempty"`
	Campus     string `protobuf:"bytes,8,opt,name=campus,proto3" json:"campus,omitempty"`
	Name       string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RoomInformationElement) Reset() {
	*x = RoomInformationElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInformationElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInformationElement) ProtoMessage() {}

func (x *RoomInformationElement) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInformationElement.ProtoReflect.Descriptor instead.
func (*RoomInformationElement) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{37}
}

func (x *RoomInformationElement) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *RoomInformationElement) GetRoomCode() string {
	if x != nil {
		return x.RoomCode
	}
	return ""
}

func (x *RoomInformationElement) GetBuildingNr() string {
	if x != nil {
		return x.BuildingNr
	}
	return ""
}

func (x *RoomInformationElement) GetArchId() string {
	if x != nil {
		return x.ArchId
	}
	return ""
}

func (x *RoomInformationElement) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *RoomInformationElement) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RoomInformationElement) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *RoomInformationElement) GetCampus() string {
	if x != nil {
		return x.Campus
	}
	return ""
}

func (x *RoomInformationElement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetListOfElevatorsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListOfElevators []*RoomInformationElement `protobuf:"bytes,1,rep,name=listOfElevators,proto3" json:"listOfElevators,omitempty"`
}

func (x *GetListOfElevatorsReply) Reset() {
	*x = GetListOfElevatorsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListOfElevatorsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListOfElevatorsReply) ProtoMessage() {}

func (x *GetListOfElevatorsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListOfElevatorsReply.ProtoReflect.Descriptor instead.
func (*GetListOfElevatorsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{38}
}

func (x *GetListOfElevatorsReply) GetListOfElevators() []*RoomInformationElement {
	if x != nil {
		return x.ListOfElevators
	}
	return nil
}

type GetMoreInformationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Information []*MoreInformationElement `protobuf:"bytes,1,rep,name=information,proto3" json:"information,omitempty"`
}

func (x *GetMoreInformationReply) Reset() {
	*x = GetMoreInformationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMoreInformationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMoreInformationReply) ProtoMessage() {}

func (x *GetMoreInformationReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMoreInformationReply.ProtoReflect.Descriptor instead.
func (*GetMoreInformationReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{39}
}

func (x *GetMoreInformationReply) GetInformation() []*MoreInformationElement {
	if x != nil {
		return x.Information
	}
	return nil
}

type MoreInformationElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Url      string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *MoreInformationElement) Reset() {
	*x = MoreInformationElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoreInformationElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoreInformationElement) ProtoMessage() {}

func (x *MoreInformationElement) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoreInformationElement.ProtoReflect.Descriptor instead.
func (*MoreInformationElement) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{40}
}

func (x *MoreInformationElement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MoreInformationElement) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *MoreInformationElement) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetOpeningTimesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetOpeningTimesRequest) Reset() {
	*x = GetOpeningTimesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpeningTimesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpeningTimesRequest) ProtoMessage() {}

func (x *GetOpeningTimesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpeningTimesRequest.ProtoReflect.Descriptor instead.
func (*GetOpeningTimesRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{41}
}

func (x *GetOpeningTimesRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetOpeningTimesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Facilities []*OpeningTimesMsgElement `protobuf:"bytes,1,rep,name=facilities,proto3" json:"facilities,omitempty"`
}

func (x *GetOpeningTimesReply) Reset() {
	*x = GetOpeningTimesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpeningTimesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpeningTimesReply) ProtoMessage() {}

func (x *GetOpeningTimesReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpeningTimesReply.ProtoReflect.Descriptor instead.
func (*GetOpeningTimesReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{42}
}

func (x *GetOpeningTimesReply) GetFacilities() []*OpeningTimesMsgElement {
	if x != nil {
		return x.Facilities
	}
	return nil
}

type OpeningTimesMsgElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Category         string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Name             string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Address          string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Room             string `protobuf:"bytes,5,opt,name=room,proto3" json:"room,omitempty"`
	TransportStation string `protobuf:"bytes,6,opt,name=transport_station,json=transportStation,proto3" json:"transport_station,omitempty"`
	OpeningHours     string `protobuf:"bytes,7,opt,name=opening_hours,json=openingHours,proto3" json:"opening_hours,omitempty"`
	Infos            string `protobuf:"bytes,8,opt,name=infos,proto3" json:"infos,omitempty"`
	Url              string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	Language         string `protobuf:"bytes,10,opt,name=language,proto3" json:"language,omitempty"`
	ReferenceId      int32  `protobuf:"varint,11,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
}

func (x *OpeningTimesMsgElement) Reset() {
	*x = OpeningTimesMsgElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpeningTimesMsgElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpeningTimesMsgElement) ProtoMessage() {}

func (x *OpeningTimesMsgElement) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpeningTimesMsgElement.ProtoReflect.Descriptor instead.
func (*OpeningTimesMsgElement) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{43}
}

func (x *OpeningTimesMsgElement) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpeningTimesMsgElement) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *OpeningTimesMsgElement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OpeningTimesMsgElement) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *OpeningTimesMsgElement) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *OpeningTimesMsgElement) GetTransportStation() string {
	if x != nil {
		return x.TransportStation
	}
	return ""
}

func (x *OpeningTimesMsgElement) GetOpeningHours() string {
	if x != nil {
		return x.OpeningHours
	}
	return ""
}

func (x *OpeningTimesMsgElement) GetInfos() string {
	if x != nil {
		return x.Infos
	}
	return ""
}

func (x *OpeningTimesMsgElement) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *OpeningTimesMsgElement) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *OpeningTimesMsgElement) GetReferenceId() int32 {
	if x != nil {
		return x.ReferenceId
	}
	return 0
}

type GetUpdateNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version int32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetUpdateNoteRequest) Reset() {
	*x = GetUpdateNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpdateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpdateNoteRequest) ProtoMessage() {}

func (x *GetUpdateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpdateNoteRequest.ProtoReflect.Descriptor instead.
func (*GetUpdateNoteRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{44}
}

func (x *GetUpdateNoteRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetUpdateNoteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetUpdateNoteReply) Reset() {
	*x = GetUpdateNoteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpdateNoteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpdateNoteReply) ProtoMessage() {}

func (x *GetUpdateNoteReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpdateNoteReply.ProtoReflect.Descriptor instead.
func (*GetUpdateNoteReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{45}
}

func (x *GetUpdateNoteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetStudyRoomListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*StudyRoomMsgElement `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *GetStudyRoomListReply) Reset() {
	*x = GetStudyRoomListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudyRoomListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudyRoomListReply) ProtoMessage() {}

func (x *GetStudyRoomListReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudyRoomListReply.ProtoReflect.Descriptor instead.
func (*GetStudyRoomListReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{46}
}

func (x *GetStudyRoomListReply) GetRooms() []*StudyRoomMsgElement {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type StudyRoomMsgElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Details string       `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	Rooms   []*StudyRoom `protobuf:"bytes,4,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *StudyRoomMsgElement) Reset() {
	*x = StudyRoomMsgElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyRoomMsgElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyRoomMsgElement) ProtoMessage() {}

func (x *StudyRoomMsgElement) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyRoomMsgElement.ProtoReflect.Descriptor instead.
func (*StudyRoomMsgElement) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{47}
}

func (x *StudyRoomMsgElement) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StudyRoomMsgElement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StudyRoomMsgElement) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *StudyRoomMsgElement) GetRooms() []*StudyRoom {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type StudyRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId      int32  `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	RoomId       int32  `protobuf:"varint,2,opt,name=roomId,proto3" json:"roomId,omitempty"`
	RoomCode     string `protobuf:"bytes,3,opt,name=room_code,json=roomCode,proto3" json:"room_code,omitempty"`
	RoomName     string `protobuf:"bytes,4,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`
	BuildingName string `protobuf:"bytes,5,opt,name=building_name,json=buildingName,proto3" json:"building_name,omitempty"`
}

func (x *StudyRoom) Reset() {
	*x = StudyRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyRoom) ProtoMessage() {}

func (x *StudyRoom) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyRoom.ProtoReflect.Descriptor instead.
func (*StudyRoom) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{48}
}

func (x *StudyRoom) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *StudyRoom) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *StudyRoom) GetRoomCode() string {
	if x != nil {
		return x.RoomCode
	}
	return ""
}

func (x *StudyRoom) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *StudyRoom) GetBuildingName() string {
	if x != nil {
		return x.BuildingName
	}
	return ""
}

type GetEventListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// optional parameter, will return all events if no id is specified
	EventId int32 `protobuf:"varint,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
}

func (x *GetEventListRequest) Reset() {
	*x = GetEventListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventListRequest) ProtoMessage() {}

func (x *GetEventListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventListRequest.ProtoReflect.Descriptor instead.
func (*GetEventListRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{49}
}

func (x *GetEventListRequest) GetEventId() int32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

type GetEventListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*EventListMsgElement `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetEventListReply) Reset() {
	*x = GetEventListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventListReply) ProtoMessage() {}

func (x *GetEventListReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventListReply.ProtoReflect.Descriptor instead.
func (*GetEventListReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{50}
}

func (x *GetEventListReply) GetEvents() []*EventListMsgElement {
	if x != nil {
		return x.Events
	}
	return nil
}

type EventListMsgElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path        string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Event       int32                  `protobuf:"varint,3,opt,name=event,proto3" json:"event,omitempty"`
	News        int32                  `protobuf:"varint,4,opt,name=news,proto3" json:"news,omitempty"`
	Kino        int32                  `protobuf:"varint,5,opt,name=kino,proto3" json:"kino,omitempty"`
	File        int32                  `protobuf:"varint,6,opt,name=file,proto3" json:"file,omitempty"`
	Title       string                 `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	Description string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Locality    string                 `protobuf:"bytes,9,opt,name=locality,proto3" json:"locality,omitempty"`
	Link        string                 `protobuf:"bytes,10,opt,name=link,proto3" json:"link,omitempty"`
	Start       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=start,proto3" json:"start,omitempty"`
	End         *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=end,proto3" json:"end,omitempty"`
	TicketGroup int32                  `protobuf:"varint,13,opt,name=ticket_group,json=ticketGroup,proto3" json:"ticket_group,omitempty"`
}

func (x *EventListMsgElement) Reset() {
	*x = EventListMsgElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventListMsgElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventListMsgElement) ProtoMessage() {}

func (x *EventListMsgElement) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventListMsgElement.ProtoReflect.Descriptor instead.
func (*EventListMsgElement) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{51}
}

func (x *EventListMsgElement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventListMsgElement) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *EventListMsgElement) GetEvent() int32 {
	if x != nil {
		return x.Event
	}
	return 0
}

func (x *EventListMsgElement) GetNews() int32 {
	if x != nil {
		return x.News
	}
	return 0
}

func (x *EventListMsgElement) GetKino() int32 {
	if x != nil {
		return x.Kino
	}
	return 0
}

func (x *EventListMsgElement) GetFile() int32 {
	if x != nil {
		return x.File
	}
	return 0
}

func (x *EventListMsgElement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EventListMsgElement) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EventListMsgElement) GetLocality() string {
	if x != nil {
		return x.Locality
	}
	return ""
}

func (x *EventListMsgElement) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *EventListMsgElement) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *EventListMsgElement) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *EventListMsgElement) GetTicketGroup() int32 {
	if x != nil {
		return x.TicketGroup
	}
	return 0
}

type GetKinoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastId int32 `protobuf:"varint,1,opt,name=lastId,proto3" json:"lastId,omitempty"`
}

func (x *GetKinoRequest) Reset() {
	*x = GetKinoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKinoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKinoRequest) ProtoMessage() {}

func (x *GetKinoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKinoRequest.ProtoReflect.Descriptor instead.
func (*GetKinoRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{52}
}

func (x *GetKinoRequest) GetLastId() int32 {
	if x != nil {
		return x.LastId
	}
	return 0
}

type GetKinoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kinos []*KinoMsgElement `protobuf:"bytes,1,rep,name=kinos,proto3" json:"kinos,omitempty"`
}

func (x *GetKinoReply) Reset() {
	*x = GetKinoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKinoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKinoReply) ProtoMessage() {}

func (x *GetKinoReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKinoReply.ProtoReflect.Descriptor instead.
func (*GetKinoReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{53}
}

func (x *GetKinoReply) GetKinos() []*KinoMsgElement {
	if x != nil {
		return x.Kinos
	}
	return nil
}

type KinoMsgElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path        string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Kino        int32                  `protobuf:"varint,3,opt,name=kino,proto3" json:"kino,omitempty"`
	Date        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Created     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	Title       string                 `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Year        string                 `protobuf:"bytes,7,opt,name=year,proto3" json:"year,omitempty"`
	Runtime     string                 `protobuf:"bytes,8,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Genre       string                 `protobuf:"bytes,9,opt,name=genre,proto3" json:"genre,omitempty"`
	Director    string                 `protobuf:"bytes,10,opt,name=director,proto3" json:"director,omitempty"`
	Actors      string                 `protobuf:"bytes,11,opt,name=actors,proto3" json:"actors,omitempty"`
	Rating      string                 `protobuf:"bytes,12,opt,name=rating,proto3" json:"rating,omitempty"`
	Description string                 `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	Cover       int32                  `protobuf:"varint,14,opt,name=cover,proto3" json:"cover,omitempty"`
	Trailer     string                 `protobuf:"bytes,15,opt,name=trailer,proto3" json:"trailer,omitempty"`
	Link        string                 `protobuf:"bytes,16,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *KinoMsgElement) Reset() {
	*x = KinoMsgElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KinoMsgElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KinoMsgElement) ProtoMessage() {}

func (x *KinoMsgElement) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KinoMsgElement.ProtoReflect.Descriptor instead.
func (*KinoMsgElement) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{54}
}

func (x *KinoMsgElement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KinoMsgElement) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *KinoMsgElement) GetKino() int32 {
	if x != nil {
		return x.Kino
	}
	return 0
}

func (x *KinoMsgElement) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *KinoMsgElement) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *KinoMsgElement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *KinoMsgElement) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *KinoMsgElement) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *KinoMsgElement) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *KinoMsgElement) GetDirector() string {
	if x != nil {
		return x.Director
	}
	return ""
}

func (x *KinoMsgElement) GetActors() string {
	if x != nil {
		return x.Actors
	}
	return ""
}

func (x *KinoMsgElement) GetRating() string {
	if x != nil {
		return x.Rating
	}
	return ""
}

func (x *KinoMsgElement) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *KinoMsgElement) GetCover() int32 {
	if x != nil {
		return x.Cover
	}
	return 0
}

func (x *KinoMsgElement) GetTrailer() string {
	if x != nil {
		return x.Trailer
	}
	return ""
}

func (x *KinoMsgElement) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type SendFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic      string  `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Email      string  `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	EmailId    string  `protobuf:"bytes,3,opt,name=emailId,proto3" json:"emailId,omitempty"`
	Message    string  `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	ImageCount int32   `protobuf:"varint,5,opt,name=image_count,json=imageCount,proto3" json:"image_count,omitempty"`
	Latitude   float64 `protobuf:"fixed64,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude  float64 `protobuf:"fixed64,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	OsVersion  string  `protobuf:"bytes,8,opt,name=osVersion,proto3" json:"osVersion,omitempty"`
	AppVersion string  `protobuf:"bytes,9,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
}

func (x *SendFeedbackRequest) Reset() {
	*x = SendFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFeedbackRequest) ProtoMessage() {}

func (x *SendFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFeedbackRequest.ProtoReflect.Descriptor instead.
func (*SendFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{55}
}

func (x *SendFeedbackRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SendFeedbackRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SendFeedbackRequest) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

func (x *SendFeedbackRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendFeedbackRequest) GetImageCount() int32 {
	if x != nil {
		return x.ImageCount
	}
	return 0
}

func (x *SendFeedbackRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *SendFeedbackRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *SendFeedbackRequest) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *SendFeedbackRequest) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

type SendFeedbackImageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SendFeedbackImageReply) Reset() {
	*x = SendFeedbackImageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFeedbackImageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFeedbackImageReply) ProtoMessage() {}

func (x *SendFeedbackImageReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFeedbackImageReply.ProtoReflect.Descriptor instead.
func (*SendFeedbackImageReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{56}
}

func (x *SendFeedbackImageReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SendFeedbackImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ImageNr int32 `protobuf:"varint,2,opt,name=imageNr,proto3" json:"imageNr,omitempty"` //todo where does the file come from?
}

func (x *SendFeedbackImageRequest) Reset() {
	*x = SendFeedbackImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFeedbackImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFeedbackImageRequest) ProtoMessage() {}

func (x *SendFeedbackImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFeedbackImageRequest.ProtoReflect.Descriptor instead.
func (*SendFeedbackImageRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{57}
}

func (x *SendFeedbackImageRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SendFeedbackImageRequest) GetImageNr() int32 {
	if x != nil {
		return x.ImageNr
	}
	return 0
}

type GetMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LrzId string `protobuf:"bytes,1,opt,name=lrzId,proto3" json:"lrzId,omitempty"`
}

func (x *GetMembersRequest) Reset() {
	*x = GetMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMembersRequest) ProtoMessage() {}

func (x *GetMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMembersRequest.ProtoReflect.Descriptor instead.
func (*GetMembersRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{58}
}

func (x *GetMembersRequest) GetLrzId() string {
	if x != nil {
		return x.LrzId
	}
	return ""
}

type GetMembersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LrzId    string `protobuf:"bytes,1,opt,name=lrzId,proto3" json:"lrzId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MemberId int32  `protobuf:"varint,3,opt,name=memberId,proto3" json:"memberId,omitempty"`
}

func (x *GetMembersReply) Reset() {
	*x = GetMembersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMembersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMembersReply) ProtoMessage() {}

func (x *GetMembersReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMembersReply.ProtoReflect.Descriptor instead.
func (*GetMembersReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{59}
}

func (x *GetMembersReply) GetLrzId() string {
	if x != nil {
		return x.LrzId
	}
	return ""
}

func (x *GetMembersReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetMembersReply) GetMemberId() int32 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type TUMCabeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TUMCabeStatus) Reset() {
	*x = TUMCabeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TUMCabeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TUMCabeStatus) ProtoMessage() {}

func (x *TUMCabeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TUMCabeStatus.ProtoReflect.Descriptor instead.
func (*TUMCabeStatus) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{60}
}

func (x *TUMCabeStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetUploadStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LrzId string `protobuf:"bytes,1,opt,name=lrzId,proto3" json:"lrzId,omitempty"`
}

func (x *GetUploadStatusRequest) Reset() {
	*x = GetUploadStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUploadStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadStatusRequest) ProtoMessage() {}

func (x *GetUploadStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadStatusRequest.ProtoReflect.Descriptor instead.
func (*GetUploadStatusRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{61}
}

func (x *GetUploadStatusRequest) GetLrzId() string {
	if x != nil {
		return x.LrzId
	}
	return ""
}

type GetUploadStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FcmToken   string `protobuf:"bytes,1,opt,name=fcm_token,json=fcmToken,proto3" json:"fcm_token,omitempty"`
	PublicKey  string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	StudentId  bool   `protobuf:"varint,3,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	EmployeeId bool   `protobuf:"varint,4,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	ExternalId bool   `protobuf:"varint,5,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *GetUploadStatusReply) Reset() {
	*x = GetUploadStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUploadStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadStatusReply) ProtoMessage() {}

func (x *GetUploadStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadStatusReply.ProtoReflect.Descriptor instead.
func (*GetUploadStatusReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{62}
}

func (x *GetUploadStatusReply) GetFcmToken() string {
	if x != nil {
		return x.FcmToken
	}
	return ""
}

func (x *GetUploadStatusReply) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *GetUploadStatusReply) GetStudentId() bool {
	if x != nil {
		return x.StudentId
	}
	return false
}

func (x *GetUploadStatusReply) GetEmployeeId() bool {
	if x != nil {
		return x.EmployeeId
	}
	return false
}

func (x *GetUploadStatusReply) GetExternalId() bool {
	if x != nil {
		return x.ExternalId
	}
	return false
}

type GetNotificationsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId int32  `protobuf:"varint,1,opt,name=notificationId,proto3" json:"notificationId,omitempty"`
	Type           int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Title          string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description    string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Signature      string `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *GetNotificationsReply) Reset() {
	*x = GetNotificationsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsReply) ProtoMessage() {}

func (x *GetNotificationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsReply.ProtoReflect.Descriptor instead.
func (*GetNotificationsReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{63}
}

func (x *GetNotificationsReply) GetNotificationId() int32 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

func (x *GetNotificationsReply) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetNotificationsReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetNotificationsReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetNotificationsReply) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type NotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId int32 `protobuf:"varint,1,opt,name=notificationId,proto3" json:"notificationId,omitempty"`
}

func (x *NotificationsRequest) Reset() {
	*x = NotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsRequest) ProtoMessage() {}

func (x *NotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsRequest.ProtoReflect.Descriptor instead.
func (*NotificationsRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{64}
}

func (x *NotificationsRequest) GetNotificationId() int32 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

type GetNotificationsConfirmReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetNotificationsConfirmReply) Reset() {
	*x = GetNotificationsConfirmReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsConfirmReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsConfirmReply) ProtoMessage() {}

func (x *GetNotificationsConfirmReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsConfirmReply.ProtoReflect.Descriptor instead.
func (*GetNotificationsConfirmReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{65}
}

func (x *GetNotificationsConfirmReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetCanteenHeadCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The requested canteen ID
	CanteenId string `protobuf:"bytes,1,opt,name=canteenId,proto3" json:"canteenId,omitempty"`
}

func (x *GetCanteenHeadCountRequest) Reset() {
	*x = GetCanteenHeadCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCanteenHeadCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCanteenHeadCountRequest) ProtoMessage() {}

func (x *GetCanteenHeadCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCanteenHeadCountRequest.ProtoReflect.Descriptor instead.
func (*GetCanteenHeadCountRequest) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{66}
}

func (x *GetCanteenHeadCountRequest) GetCanteenId() string {
	if x != nil {
		return x.CanteenId
	}
	return ""
}

type GetCanteenHeadCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The absolut count of humans in the canteen or 0 in case no data is available.
	Count uint32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The maximum nunmber of humans in the canteen for the percent to be 100.00 or 0 in case no data is available.
	MaxCount uint32 `protobuf:"varint,2,opt,name=maxCount,proto3" json:"maxCount,omitempty"`
	// Current capacity utilization of the canteen or -1 in case no data is available.
	Percent float32 `protobuf:"fixed32,3,opt,name=percent,proto3" json:"percent,omitempty"`
	// A time stamp indicating how up to date the response is or an unspecified value in case there is no data available (precent == -1).
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GetCanteenHeadCountReply) Reset() {
	*x = GetCanteenHeadCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCanteenHeadCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCanteenHeadCountReply) ProtoMessage() {}

func (x *GetCanteenHeadCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCanteenHeadCountReply.ProtoReflect.Descriptor instead.
func (*GetCanteenHeadCountReply) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{67}
}

func (x *GetCanteenHeadCountReply) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetCanteenHeadCountReply) GetMaxCount() uint32 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *GetCanteenHeadCountReply) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *GetCanteenHeadCountReply) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type GetRoomScheduleReply_RoomScheduleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Title      string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	EventId    int32                  `protobuf:"varint,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	CourseCode string                 `protobuf:"bytes,5,opt,name=course_code,json=courseCode,proto3" json:"course_code,omitempty"`
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) Reset() {
	*x = GetRoomScheduleReply_RoomScheduleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomScheduleReply_RoomScheduleEvent) ProtoMessage() {}

func (x *GetRoomScheduleReply_RoomScheduleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomScheduleReply_RoomScheduleEvent.ProtoReflect.Descriptor instead.
func (*GetRoomScheduleReply_RoomScheduleEvent) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetEventId() int32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *GetRoomScheduleReply_RoomScheduleEvent) GetCourseCode() string {
	if x != nil {
		return x.CourseCode
	}
	return ""
}

type GetRoomMapsReply_Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId       int64  `protobuf:"varint,1,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Scale       int64  `protobuf:"varint,3,opt,name=scale,proto3" json:"scale,omitempty"`
	Width       int64  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height      int64  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetRoomMapsReply_Map) Reset() {
	*x = GetRoomMapsReply_Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomMapsReply_Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomMapsReply_Map) ProtoMessage() {}

func (x *GetRoomMapsReply_Map) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomMapsReply_Map.ProtoReflect.Descriptor instead.
func (*GetRoomMapsReply_Map) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetRoomMapsReply_Map) GetMapId() int64 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *GetRoomMapsReply_Map) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetRoomMapsReply_Map) GetScale() int64 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *GetRoomMapsReply_Map) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GetRoomMapsReply_Map) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetLocationsReply_Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Lon      string `protobuf:"bytes,3,opt,name=lon,proto3" json:"lon,omitempty"`
	Lat      string `protobuf:"bytes,4,opt,name=lat,proto3" json:"lat,omitempty"`
	Radius   string `protobuf:"bytes,5,opt,name=radius,proto3" json:"radius,omitempty"`
}

func (x *GetLocationsReply_Location) Reset() {
	*x = GetLocationsReply_Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CampusService_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocationsReply_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocationsReply_Location) ProtoMessage() {}

func (x *GetLocationsReply_Location) ProtoReflect() protoreflect.Message {
	mi := &file_CampusService_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocationsReply_Location.ProtoReflect.Descriptor instead.
func (*GetLocationsReply_Location) Descriptor() ([]byte, []int) {
	return file_CampusService_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GetLocationsReply_Location) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *GetLocationsReply_Location) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetLocationsReply_Location) GetLon() string {
	if x != nil {
		return x.Lon
	}
	return ""
}

func (x *GetLocationsReply_Location) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *GetLocationsReply_Location) GetRadius() string {
	if x != nil {
		return x.Radius
	}
	return ""
}

var File_CampusService_proto protoreflect.FileDescriptor

var file_CampusService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0xa3, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0xc5, 0x01, 0x0a, 0x11, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x63, 0x68, 0x49,
	0x64, 0x22, 0x78, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x74, 0x6d, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x75, 0x74, 0x6d, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x74, 0x6d, 0x5f, 0x65,
	0x61, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x75, 0x74,
	0x6d, 0x45, 0x61, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x74, 0x6d, 0x5f,
	0x6e, 0x6f, 0x72, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x75, 0x74, 0x6d, 0x4e, 0x6f, 0x72, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x2d, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2d, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4d, 0x61, 0x70, 0x52, 0x04, 0x6d, 0x61, 0x70, 0x73, 0x1a, 0x82,
	0x01, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x31, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xca, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x76, 0x0a, 0x08, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x22, 0x2a, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x33, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05, 0x72,
	0x6f, 0x6f, 0x6d, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6e,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x4e, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75,
	0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x72,
	0x70, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x3c, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x4e,
	0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xd4,
	0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xac, 0x01, 0x0a, 0x16, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x68, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61,
	0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x73, 0x68,
	0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x14, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x76, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x76, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x74, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x74, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6d, 0x61, 0x78, 0x12, 0x34, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x22, 0xf1, 0x01, 0x0a, 0x0f, 0x44, 0x69,
	0x73, 0x68, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a,
	0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x76, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x76, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x74, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x74,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x34, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54,
	0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x6e,
	0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x73, 0x22, 0xcb, 0x01,
	0x0a, 0x11, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x4e,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x54, 0x61, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x19,
	0x4e, 0x65, 0x77, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x52, 0x0a, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x14, 0x4e, 0x65, 0x77, 0x44, 0x69, 0x73, 0x68, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x66, 0x65, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x2e, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x54, 0x61, 0x67, 0x52, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x0a, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x22, 0x44, 0x0a,
	0x0c, 0x54, 0x61, 0x67, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61,
	0x67, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x65, 0x6e, 0x22, 0x39, 0x0a, 0x09, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x43,
	0x0a, 0x13, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x4e, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x22, 0x6f, 0x0a, 0x0f, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x76, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x76, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x74, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x74, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d,
	0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6d, 0x61, 0x78, 0x22, 0x41, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x61, 0x66, 0x65, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x09, 0x63, 0x61, 0x66,
	0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x09, 0x63, 0x61,
	0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0x6f, 0x0a, 0x09, 0x43, 0x61, 0x66, 0x65, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x6e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x24, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x68, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x73, 0x68, 0x22, 0x68,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x11, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22, 0x92, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x61, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x61, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x75, 0x6d, 0x49, 0x44,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x75, 0x6d, 0x49, 0x44, 0x22, 0x54, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x32, 0x47, 0x70, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x32, 0x47, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x32, 0x47, 0x70, 0x73, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x32,
	0x47, 0x70, 0x73, 0x22, 0x5f, 0x0a, 0x13, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x32,
	0x47, 0x70, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61,
	0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x4e, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5b, 0x0a, 0x1a, 0x61,
	0x72, 0x65, 0x61, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x1a, 0x61, 0x72,
	0x65, 0x61, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x72, 0x22, 0x47, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x65, 0x61, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4e,
	0x72, 0x22, 0x5a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x54, 0x6f,
	0x69, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0d, 0x6c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x54, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0d,
	0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x54, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x73, 0x22, 0xfb, 0x01,
	0x0a, 0x16, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x60, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66,
	0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x6c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x58, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x16, 0x4d, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x34, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x4d, 0x73, 0x67, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x22, 0xbf, 0x02, 0x0a, 0x16, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x4d, 0x73, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x30, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x47, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a,
	0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x73, 0x67, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x79, 0x0a,
	0x13, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x73, 0x67, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f,
	0x6f, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73,
	0x67, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xfa, 0x02, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73,
	0x67, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x77, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6e, 0x65, 0x77, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x28, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4b, 0x69, 0x6e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4b, 0x69,
	0x6e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x6b, 0x69, 0x6e, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x69, 0x6e,
	0x6f, 0x4d, 0x73, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x6b, 0x69, 0x6e,
	0x6f, 0x73, 0x22, 0xbe, 0x03, 0x0a, 0x0e, 0x4b, 0x69, 0x6e, 0x6f, 0x4d, 0x73, 0x67, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6b, 0x69, 0x6e,
	0x6f, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x22, 0x8e, 0x02, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x44, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x72, 0x22, 0x29, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x72, 0x7a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x72, 0x7a, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x72,
	0x7a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x72, 0x7a, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x27, 0x0a, 0x0d, 0x54, 0x55, 0x4d, 0x43, 0x61, 0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2e, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x72, 0x7a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x72, 0x7a, 0x49, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x63, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22,
	0xa9, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x3e, 0x0a, 0x14, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x74, 0x65, 0x65,
	0x6e, 0x48, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x6e, 0x49, 0x64, 0x22,
	0xa0, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x6e, 0x48, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x32, 0xbe, 0x1e, 0x0a, 0x06, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x12, 0x4d, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70,
	0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0b, 0x12, 0x09, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x74, 0x6f, 0x70, 0x12, 0x5e, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77,
	0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x22, 0x1e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x62, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x0d, 0x2f,
	0x6e, 0x65, 0x77, 0x73, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x68, 0x0a, 0x0b,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x62, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x17, 0x2f,
	0x72, 0x6f, 0x6f, 0x6d, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x6a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22,
	0x62, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x15, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x7d, 0x12, 0x60, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70,
	0x73, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d,
	0x61, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x62, 0x04, 0x6d, 0x61,
	0x70, 0x73, 0x22, 0x10, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f,
	0x6d, 0x61, 0x70, 0x73, 0x12, 0x7b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21,
	0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x7b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x30, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x62, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x1d, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x72, 0x6f, 0x6f,
	0x6d, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x6f,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x66, 0x65,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x2f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x65, 0x74, 0x12,
	0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x68, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x69, 0x73, 0x68, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x64, 0x69, 0x73,
	0x68, 0x2f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x6e, 0x0a, 0x12,
	0x4e, 0x65, 0x77, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x66, 0x65,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x2f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6e, 0x65, 0x77, 0x12, 0x5f, 0x0a, 0x0d,
	0x4e, 0x65, 0x77, 0x44, 0x69, 0x73, 0x68, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x44, 0x69, 0x73, 0x68, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x64, 0x69,
	0x73, 0x68, 0x2f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6e, 0x65, 0x77, 0x12, 0x71, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x73,
	0x68, 0x54, 0x61, 0x67, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x62, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x2f, 0x64, 0x69, 0x73, 0x68, 0x2f, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x2f, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73,
	0x12, 0x66, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x26, 0x62, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x67, 0x73, 0x12, 0x18,
	0x2f, 0x64, 0x69, 0x73, 0x68, 0x2f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x6c, 0x6c,
	0x44, 0x69, 0x73, 0x68, 0x54, 0x61, 0x67, 0x73, 0x12, 0x7b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x54, 0x61, 0x67, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x62, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x2f, 0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x2f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x54, 0x61, 0x67, 0x73, 0x12, 0x6c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x66, 0x65,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x62, 0x09,
	0x63, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x18, 0x2f, 0x63, 0x61, 0x66, 0x65,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x2f, 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x66, 0x65, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x73, 0x12, 0x56, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73,
	0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x62, 0x04, 0x64, 0x69, 0x73, 0x68, 0x12, 0x0f, 0x2f, 0x64, 0x69, 0x73,
	0x68, 0x2f, 0x61, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x12, 0x6d, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x66, 0x72, 0x65,
	0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x67, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x32, 0x47, 0x70, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x32, 0x47, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x62, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x66, 0x72, 0x65, 0x65, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x32,
	0x47, 0x70, 0x73, 0x12, 0x90, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x46,
	0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x4e, 0x72, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x65, 0x61, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x4e, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x12, 0x13, 0x2f, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x66, 0x72, 0x65, 0x65, 0x2f,
	0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x12, 0x64, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x66, 0x54, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x66, 0x54, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x66, 0x72, 0x65, 0x65, 0x2f, 0x74, 0x6f, 0x69, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x6a, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x12, 0x16, 0x2f, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x66, 0x72, 0x65, 0x65, 0x2f, 0x65,
	0x6c, 0x65, 0x76, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x70, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x62,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x66, 0x72, 0x65, 0x65, 0x2f, 0x6d, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2f, 0x7b, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x7d, 0x12, 0x62, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x6e, 0x6f, 0x74,
	0x65, 0x2f, 0x7b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x7d, 0x12, 0x5b, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x55, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x49, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4b, 0x69, 0x6e, 0x6f, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x4b, 0x69, 0x6e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x69, 0x6e, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x6b, 0x69, 0x6e,
	0x6f, 0x2f, 0x7b, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x7d, 0x12, 0x58, 0x0a, 0x0c, 0x53, 0x65,
	0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x22, 0x09, 0x2f, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x71, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x18, 0x2f,
	0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x4e, 0x72, 0x7d, 0x12, 0x56, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x55, 0x4d, 0x43, 0x61, 0x62, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x10, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x52, 0x0a, 0x09, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x55, 0x4d, 0x43, 0x61,
	0x62, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x12, 0x11, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x4b, 0x65, 0x79, 0x12, 0x5f, 0x0a, 0x14, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x47, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x55, 0x4d, 0x43, 0x61, 0x62,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22,
	0x13, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x64, 0x64, 0x47, 0x63, 0x6d, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x6b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x2f, 0x7b, 0x6c, 0x72, 0x7a, 0x49, 0x64,
	0x7d, 0x12, 0x71, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x7d, 0x12, 0x87, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12,
	0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x2f, 0x7b, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x7d, 0x12, 0x54,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x12, 0x10, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x6c, 0x72,
	0x7a, 0x49, 0x64, 0x7d, 0x12, 0x7d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x74, 0x65,
	0x65, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x6e, 0x48, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x6e, 0x48, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x6e, 0x2f, 0x68, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x7b, 0x63, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x6e,
	0x49, 0x64, 0x7d, 0x42, 0x5e, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x75, 0x6d, 0x2e, 0x63,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x0e, 0x43, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x25, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x55, 0x4d, 0x2d, 0x44, 0x65, 0x76, 0x2f,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x2d, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61,
	0x70, 0x69, 0xaa, 0x02, 0x0e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x41, 0x70, 0x69, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_CampusService_proto_rawDescOnce sync.Once
	file_CampusService_proto_rawDescData = file_CampusService_proto_rawDesc
)

func file_CampusService_proto_rawDescGZIP() []byte {
	file_CampusService_proto_rawDescOnce.Do(func() {
		file_CampusService_proto_rawDescData = protoimpl.X.CompressGZIP(file_CampusService_proto_rawDescData)
	})
	return file_CampusService_proto_rawDescData
}

var file_CampusService_proto_msgTypes = make([]protoimpl.MessageInfo, 71)
var file_CampusService_proto_goTypes = []interface{}{
	(*GetRoomScheduleRequest)(nil),                 // 0: api.GetRoomScheduleRequest
	(*GetRoomScheduleReply)(nil),                   // 1: api.GetRoomScheduleReply
	(*GetRoomCoordinatesRequest)(nil),              // 2: api.GetRoomCoordinatesRequest
	(*GetRoomCoordinatesReply)(nil),                // 3: api.GetRoomCoordinatesReply
	(*GetRoomMapsRequest)(nil),                     // 4: api.GetRoomMapsRequest
	(*GetRoomMapsReply)(nil),                       // 5: api.GetRoomMapsReply
	(*GetLocationsRequest)(nil),                    // 6: api.GetLocationsRequest
	(*GetLocationsReply)(nil),                      // 7: api.GetLocationsReply
	(*SearchRoomsRequest)(nil),                     // 8: api.SearchRoomsRequest
	(*SearchRoomsReply)(nil),                       // 9: api.SearchRoomsReply
	(*Room)(nil),                                   // 10: api.Room
	(*NewsSourceArray)(nil),                        // 11: api.NewsSourceArray
	(*NewsSource)(nil),                             // 12: api.NewsSource
	(*GetTopNewsReply)(nil),                        // 13: api.GetTopNewsReply
	(*CafeteriaRatingRequest)(nil),                 // 14: api.CafeteriaRatingRequest
	(*DishRatingRequest)(nil),                      // 15: api.DishRatingRequest
	(*CafeteriaRatingReply)(nil),                   // 16: api.CafeteriaRatingReply
	(*DishRatingReply)(nil),                        // 17: api.DishRatingReply
	(*SingleRatingReply)(nil),                      // 18: api.SingleRatingReply
	(*NewCafeteriaRatingRequest)(nil),              // 19: api.NewCafeteriaRatingRequest
	(*NewDishRatingRequest)(nil),                   // 20: api.NewDishRatingRequest
	(*GetTagsReply)(nil),                           // 21: api.GetTagsReply
	(*TagsOverview)(nil),                           // 22: api.TagsOverview
	(*RatingTag)(nil),                              // 23: api.RatingTag
	(*RatingTagNewRequest)(nil),                    // 24: api.RatingTagNewRequest
	(*RatingTagResult)(nil),                        // 25: api.RatingTagResult
	(*GetCafeteriaReply)(nil),                      // 26: api.GetCafeteriaReply
	(*Cafeteria)(nil),                              // 27: api.Cafeteria
	(*GetDishesRequest)(nil),                       // 28: api.GetDishesRequest
	(*GetDishesReply)(nil),                         // 29: api.GetDishesReply
	(*GetResponsiblePersonReply)(nil),              // 30: api.GetResponsiblePersonReply
	(*ResponsiblePersonElement)(nil),               // 31: api.ResponsiblePersonElement
	(*GetBuilding2GpsReply)(nil),                   // 32: api.GetBuilding2GpsReply
	(*Building2GpsElement)(nil),                    // 33: api.Building2GpsElement
	(*GetAreaFacilitiesByBuildingNrReply)(nil),     // 34: api.GetAreaFacilitiesByBuildingNrReply
	(*GetAreaFacilitiesByBuildingNrRequest)(nil),   // 35: api.GetAreaFacilitiesByBuildingNrRequest
	(*GetListOfToiletsReply)(nil),                  // 36: api.GetListOfToiletsReply
	(*RoomInformationElement)(nil),                 // 37: api.RoomInformationElement
	(*GetListOfElevatorsReply)(nil),                // 38: api.GetListOfElevatorsReply
	(*GetMoreInformationReply)(nil),                // 39: api.GetMoreInformationReply
	(*MoreInformationElement)(nil),                 // 40: api.MoreInformationElement
	(*GetOpeningTimesRequest)(nil),                 // 41: api.GetOpeningTimesRequest
	(*GetOpeningTimesReply)(nil),                   // 42: api.GetOpeningTimesReply
	(*OpeningTimesMsgElement)(nil),                 // 43: api.OpeningTimesMsgElement
	(*GetUpdateNoteRequest)(nil),                   // 44: api.GetUpdateNoteRequest
	(*GetUpdateNoteReply)(nil),                     // 45: api.GetUpdateNoteReply
	(*GetStudyRoomListReply)(nil),                  // 46: api.GetStudyRoomListReply
	(*StudyRoomMsgElement)(nil),                    // 47: api.StudyRoomMsgElement
	(*StudyRoom)(nil),                              // 48: api.StudyRoom
	(*GetEventListRequest)(nil),                    // 49: api.GetEventListRequest
	(*GetEventListReply)(nil),                      // 50: api.GetEventListReply
	(*EventListMsgElement)(nil),                    // 51: api.EventListMsgElement
	(*GetKinoRequest)(nil),                         // 52: api.GetKinoRequest
	(*GetKinoReply)(nil),                           // 53: api.GetKinoReply
	(*KinoMsgElement)(nil),                         // 54: api.KinoMsgElement
	(*SendFeedbackRequest)(nil),                    // 55: api.SendFeedbackRequest
	(*SendFeedbackImageReply)(nil),                 // 56: api.SendFeedbackImageReply
	(*SendFeedbackImageRequest)(nil),               // 57: api.SendFeedbackImageRequest
	(*GetMembersRequest)(nil),                      // 58: api.GetMembersRequest
	(*GetMembersReply)(nil),                        // 59: api.GetMembersReply
	(*TUMCabeStatus)(nil),                          // 60: api.TUMCabeStatus
	(*GetUploadStatusRequest)(nil),                 // 61: api.GetUploadStatusRequest
	(*GetUploadStatusReply)(nil),                   // 62: api.GetUploadStatusReply
	(*GetNotificationsReply)(nil),                  // 63: api.GetNotificationsReply
	(*NotificationsRequest)(nil),                   // 64: api.NotificationsRequest
	(*GetNotificationsConfirmReply)(nil),           // 65: api.GetNotificationsConfirmReply
	(*GetCanteenHeadCountRequest)(nil),             // 66: api.GetCanteenHeadCountRequest
	(*GetCanteenHeadCountReply)(nil),               // 67: api.GetCanteenHeadCountReply
	(*GetRoomScheduleReply_RoomScheduleEvent)(nil), // 68: api.GetRoomScheduleReply.RoomScheduleEvent
	(*GetRoomMapsReply_Map)(nil),                   // 69: api.GetRoomMapsReply.Map
	(*GetLocationsReply_Location)(nil),             // 70: api.GetLocationsReply.Location
	(*timestamppb.Timestamp)(nil),                  // 71: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                          // 72: google.protobuf.Empty
}
var file_CampusService_proto_depIdxs = []int32{
	71, // 0: api.GetRoomScheduleRequest.start:type_name -> google.protobuf.Timestamp
	71, // 1: api.GetRoomScheduleRequest.end:type_name -> google.protobuf.Timestamp
	68, // 2: api.GetRoomScheduleReply.events:type_name -> api.GetRoomScheduleReply.RoomScheduleEvent
	69, // 3: api.GetRoomMapsReply.maps:type_name -> api.GetRoomMapsReply.Map
	70, // 4: api.GetLocationsReply.locations:type_name -> api.GetLocationsReply.Location
	10, // 5: api.SearchRoomsReply.rooms:type_name -> api.Room
	12, // 6: api.NewsSourceArray.sources:type_name -> api.NewsSource
	71, // 7: api.GetTopNewsReply.created:type_name -> google.protobuf.Timestamp
	71, // 8: api.GetTopNewsReply.from:type_name -> google.protobuf.Timestamp
	71, // 9: api.GetTopNewsReply.to:type_name -> google.protobuf.Timestamp
	71, // 10: api.CafeteriaRatingRequest.from:type_name -> google.protobuf.Timestamp
	71, // 11: api.CafeteriaRatingRequest.to:type_name -> google.protobuf.Timestamp
	71, // 12: api.DishRatingRequest.from:type_name -> google.protobuf.Timestamp
	71, // 13: api.DishRatingRequest.to:type_name -> google.protobuf.Timestamp
	18, // 14: api.CafeteriaRatingReply.rating:type_name -> api.SingleRatingReply
	25, // 15: api.CafeteriaRatingReply.ratingTags:type_name -> api.RatingTagResult
	18, // 16: api.DishRatingReply.rating:type_name -> api.SingleRatingReply
	25, // 17: api.DishRatingReply.ratingTags:type_name -> api.RatingTagResult
	25, // 18: api.DishRatingReply.nameTags:type_name -> api.RatingTagResult
	24, // 19: api.SingleRatingReply.ratingTags:type_name -> api.RatingTagNewRequest
	71, // 20: api.SingleRatingReply.visited:type_name -> google.protobuf.Timestamp
	23, // 21: api.NewCafeteriaRatingRequest.ratingTags:type_name -> api.RatingTag
	23, // 22: api.NewDishRatingRequest.ratingTags:type_name -> api.RatingTag
	22, // 23: api.GetTagsReply.ratingTags:type_name -> api.TagsOverview
	27, // 24: api.GetCafeteriaReply.cafeteria:type_name -> api.Cafeteria
	31, // 25: api.GetResponsiblePersonReply.responsiblePerson:type_name -> api.ResponsiblePersonElement
	33, // 26: api.GetBuilding2GpsReply.building2Gps:type_name -> api.Building2GpsElement
	37, // 27: api.GetAreaFacilitiesByBuildingNrReply.areaFacilitiesByBuildingNr:type_name -> api.RoomInformationElement
	37, // 28: api.GetListOfToiletsReply.listOfToilets:type_name -> api.RoomInformationElement
	37, // 29: api.GetListOfElevatorsReply.listOfElevators:type_name -> api.RoomInformationElement
	40, // 30: api.GetMoreInformationReply.information:type_name -> api.MoreInformationElement
	43, // 31: api.GetOpeningTimesReply.facilities:type_name -> api.OpeningTimesMsgElement
	47, // 32: api.GetStudyRoomListReply.rooms:type_name -> api.StudyRoomMsgElement
	48, // 33: api.StudyRoomMsgElement.rooms:type_name -> api.StudyRoom
	51, // 34: api.GetEventListReply.events:type_name -> api.EventListMsgElement
	71, // 35: api.EventListMsgElement.start:type_name -> google.protobuf.Timestamp
	71, // 36: api.EventListMsgElement.end:type_name -> google.protobuf.Timestamp
	54, // 37: api.GetKinoReply.kinos:type_name -> api.KinoMsgElement
	71, // 38: api.KinoMsgElement.date:type_name -> google.protobuf.Timestamp
	71, // 39: api.KinoMsgElement.created:type_name -> google.protobuf.Timestamp
	71, // 40: api.GetCanteenHeadCountReply.timestamp:type_name -> google.protobuf.Timestamp
	71, // 41: api.GetRoomScheduleReply.RoomScheduleEvent.start:type_name -> google.protobuf.Timestamp
	71, // 42: api.GetRoomScheduleReply.RoomScheduleEvent.end:type_name -> google.protobuf.Timestamp
	72, // 43: api.Campus.GetTopNews:input_type -> google.protobuf.Empty
	72, // 44: api.Campus.GetNewsSources:input_type -> google.protobuf.Empty
	8,  // 45: api.Campus.SearchRooms:input_type -> api.SearchRoomsRequest
	6,  // 46: api.Campus.GetLocations:input_type -> api.GetLocationsRequest
	4,  // 47: api.Campus.GetRoomMaps:input_type -> api.GetRoomMapsRequest
	2,  // 48: api.Campus.GetRoomCoordinates:input_type -> api.GetRoomCoordinatesRequest
	0,  // 49: api.Campus.GetRoomSchedule:input_type -> api.GetRoomScheduleRequest
	14, // 50: api.Campus.GetCafeteriaRatings:input_type -> api.CafeteriaRatingRequest
	15, // 51: api.Campus.GetDishRatings:input_type -> api.DishRatingRequest
	19, // 52: api.Campus.NewCafeteriaRating:input_type -> api.NewCafeteriaRatingRequest
	20, // 53: api.Campus.NewDishRating:input_type -> api.NewDishRatingRequest
	72, // 54: api.Campus.GetAvailableDishTags:input_type -> google.protobuf.Empty
	72, // 55: api.Campus.GetNameTags:input_type -> google.protobuf.Empty
	72, // 56: api.Campus.GetAvailableCafeteriaTags:input_type -> google.protobuf.Empty
	72, // 57: api.Campus.GetCafeterias:input_type -> google.protobuf.Empty
	28, // 58: api.Campus.GetDishes:input_type -> api.GetDishesRequest
	72, // 59: api.Campus.GetResponsiblePerson:input_type -> google.protobuf.Empty
	72, // 60: api.Campus.GetBuilding2Gps:input_type -> google.protobuf.Empty
	35, // 61: api.Campus.GetAreaFacilitiesByBuildingNr:input_type -> api.GetAreaFacilitiesByBuildingNrRequest
	72, // 62: api.Campus.GetListOfToilets:input_type -> google.protobuf.Empty
	72, // 63: api.Campus.GetListOfElevators:input_type -> google.protobuf.Empty
	72, // 64: api.Campus.GetMoreInformation:input_type -> google.protobuf.Empty
	41, // 65: api.Campus.GetOpeningTimes:input_type -> api.GetOpeningTimesRequest
	44, // 66: api.Campus.GetUpdateNote:input_type -> api.GetUpdateNoteRequest
	72, // 67: api.Campus.GetStudyRoomList:input_type -> google.protobuf.Empty
	49, // 68: api.Campus.GetEventList:input_type -> api.GetEventListRequest
	52, // 69: api.Campus.GetKino:input_type -> api.GetKinoRequest
	55, // 70: api.Campus.SendFeedback:input_type -> api.SendFeedbackRequest
	57, // 71: api.Campus.SendFeedbackImage:input_type -> api.SendFeedbackImageRequest
	72, // 72: api.Campus.RegisterDevice:input_type -> google.protobuf.Empty
	72, // 73: api.Campus.VerifyKey:input_type -> google.protobuf.Empty
	72, // 74: api.Campus.DeviceUploadGcmToken:input_type -> google.protobuf.Empty
	61, // 75: api.Campus.GetUploadStatus:input_type -> api.GetUploadStatusRequest
	64, // 76: api.Campus.GetNotification:input_type -> api.NotificationsRequest
	64, // 77: api.Campus.GetNotificationConfirm:input_type -> api.NotificationsRequest
	58, // 78: api.Campus.GetMembers:input_type -> api.GetMembersRequest
	66, // 79: api.Campus.GetCanteenHeadCount:input_type -> api.GetCanteenHeadCountRequest
	13, // 80: api.Campus.GetTopNews:output_type -> api.GetTopNewsReply
	11, // 81: api.Campus.GetNewsSources:output_type -> api.NewsSourceArray
	9,  // 82: api.Campus.SearchRooms:output_type -> api.SearchRoomsReply
	7,  // 83: api.Campus.GetLocations:output_type -> api.GetLocationsReply
	5,  // 84: api.Campus.GetRoomMaps:output_type -> api.GetRoomMapsReply
	3,  // 85: api.Campus.GetRoomCoordinates:output_type -> api.GetRoomCoordinatesReply
	1,  // 86: api.Campus.GetRoomSchedule:output_type -> api.GetRoomScheduleReply
	16, // 87: api.Campus.GetCafeteriaRatings:output_type -> api.CafeteriaRatingReply
	17, // 88: api.Campus.GetDishRatings:output_type -> api.DishRatingReply
	72, // 89: api.Campus.NewCafeteriaRating:output_type -> google.protobuf.Empty
	72, // 90: api.Campus.NewDishRating:output_type -> google.protobuf.Empty
	21, // 91: api.Campus.GetAvailableDishTags:output_type -> api.GetTagsReply
	21, // 92: api.Campus.GetNameTags:output_type -> api.GetTagsReply
	21, // 93: api.Campus.GetAvailableCafeteriaTags:output_type -> api.GetTagsReply
	26, // 94: api.Campus.GetCafeterias:output_type -> api.GetCafeteriaReply
	29, // 95: api.Campus.GetDishes:output_type -> api.GetDishesReply
	30, // 96: api.Campus.GetResponsiblePerson:output_type -> api.GetResponsiblePersonReply
	32, // 97: api.Campus.GetBuilding2Gps:output_type -> api.GetBuilding2GpsReply
	34, // 98: api.Campus.GetAreaFacilitiesByBuildingNr:output_type -> api.GetAreaFacilitiesByBuildingNrReply
	36, // 99: api.Campus.GetListOfToilets:output_type -> api.GetListOfToiletsReply
	38, // 100: api.Campus.GetListOfElevators:output_type -> api.GetListOfElevatorsReply
	39, // 101: api.Campus.GetMoreInformation:output_type -> api.GetMoreInformationReply
	42, // 102: api.Campus.GetOpeningTimes:output_type -> api.GetOpeningTimesReply
	45, // 103: api.Campus.GetUpdateNote:output_type -> api.GetUpdateNoteReply
	46, // 104: api.Campus.GetStudyRoomList:output_type -> api.GetStudyRoomListReply
	50, // 105: api.Campus.GetEventList:output_type -> api.GetEventListReply
	53, // 106: api.Campus.GetKino:output_type -> api.GetKinoReply
	56, // 107: api.Campus.SendFeedback:output_type -> api.SendFeedbackImageReply
	56, // 108: api.Campus.SendFeedbackImage:output_type -> api.SendFeedbackImageReply
	60, // 109: api.Campus.RegisterDevice:output_type -> api.TUMCabeStatus
	60, // 110: api.Campus.VerifyKey:output_type -> api.TUMCabeStatus
	60, // 111: api.Campus.DeviceUploadGcmToken:output_type -> api.TUMCabeStatus
	62, // 112: api.Campus.GetUploadStatus:output_type -> api.GetUploadStatusReply
	63, // 113: api.Campus.GetNotification:output_type -> api.GetNotificationsReply
	65, // 114: api.Campus.GetNotificationConfirm:output_type -> api.GetNotificationsConfirmReply
	59, // 115: api.Campus.GetMembers:output_type -> api.GetMembersReply
	67, // 116: api.Campus.GetCanteenHeadCount:output_type -> api.GetCanteenHeadCountReply
	80, // [80:117] is the sub-list for method output_type
	43, // [43:80] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_CampusService_proto_init() }
func file_CampusService_proto_init() {
	if File_CampusService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_CampusService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomScheduleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomCoordinatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomCoordinatesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomMapsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomMapsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRoomsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRoomsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsSourceArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopNewsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CafeteriaRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CafeteriaRatingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishRatingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleRatingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCafeteriaRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewDishRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagsOverview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingTagNewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingTagResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCafeteriaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cafeteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDishesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDishesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponsiblePersonReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsiblePersonElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuilding2GpsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Building2GpsElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAreaFacilitiesByBuildingNrReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAreaFacilitiesByBuildingNrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListOfToiletsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInformationElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListOfElevatorsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMoreInformationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoreInformationElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOpeningTimesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOpeningTimesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpeningTimesMsgElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpdateNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpdateNoteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStudyRoomListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyRoomMsgElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventListMsgElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKinoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKinoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KinoMsgElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFeedbackImageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFeedbackImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMembersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TUMCabeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUploadStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUploadStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsConfirmReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCanteenHeadCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCanteenHeadCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomScheduleReply_RoomScheduleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomMapsReply_Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CampusService_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocationsReply_Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_CampusService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   71,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_CampusService_proto_goTypes,
		DependencyIndexes: file_CampusService_proto_depIdxs,
		MessageInfos:      file_CampusService_proto_msgTypes,
	}.Build()
	File_CampusService_proto = out.File
	file_CampusService_proto_rawDesc = nil
	file_CampusService_proto_goTypes = nil
	file_CampusService_proto_depIdxs = nil
}
