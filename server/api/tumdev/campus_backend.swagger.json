{
"basePath": "/v1",
  "swagger": "2.0",
  "info": {
    "title": "tumdev/campus_backend.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Campus"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/barrierfree/contacts": {
      "get": {
        "operationId": "Campus_GetResponsiblePerson",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetResponsiblePersonReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Campus"
        ]
      }
    },
    "/barrierfree/moreInformation": {
      "get": {
        "operationId": "Campus_GetMoreInformation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetMoreInformationReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Campus"
        ]
      }
    },
    "/canteen/allCanteens": {
      "get": {
        "operationId": "Campus_GetCanteens",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/apiCanteen"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Campus"
        ]
      }
    },
    "/canteen/headCount/{canteenId}": {
      "get": {
        "operationId": "Campus_GetCanteenHeadCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetCanteenHeadCountReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canteenId",
            "description": "The requested canteen ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/canteen/rating/allRatingTags": {
      "get": {
        "operationId": "Campus_GetAvailableCanteenTags",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/apiTagsOverview"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Campus"
        ]
      }
    },
    "/canteen/rating/get": {
      "post": {
        "summary": "This endpoint retrieves Canteen Ratings from the Backend.",
        "operationId": "Campus_GetCanteenRatings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetCanteenRatingsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiGetCanteenRatingsRequest"
            }
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/canteen/rating/new": {
      "post": {
        "operationId": "Campus_CreateCanteenRating",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateCanteenRatingReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateCanteenRatingRequest"
            }
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/device": {
      "post": {
        "summary": "Create an device (Android/iOS/Windows) for push notifications",
        "operationId": "Campus_CreateDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateDeviceReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateDeviceRequest"
            }
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/device/uploaded/{lrzId}": {
      "get": {
        "operationId": "Campus_GetUploadStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetUploadStatusReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lrzId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/device/{deviceId}": {
      "delete": {
        "summary": "Delete a device from push notifications",
        "operationId": "Campus_DeleteDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiDeleteDeviceReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "IOS",
              "ANDROID",
              "WINDOWS"
            ],
            "default": "IOS"
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/dish/allDishes": {
      "get": {
        "operationId": "Campus_GetDishes",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "canteenId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "year",
            "description": "\u003e=2022 until the current year",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "week",
            "description": "range 1 - 53",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "day",
            "description": "range 0 (Monday) - 4 (Friday)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/dish/rating/allDishTags": {
      "get": {
        "operationId": "Campus_GetNameTags",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/apiTagsOverview"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Campus"
        ]
      }
    },
    "/dish/rating/allRatingTags": {
      "get": {
        "operationId": "Campus_GetAvailableDishTags",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/apiTagsOverview"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Campus"
        ]
      }
    },
    "/dish/rating/get": {
      "post": {
        "operationId": "Campus_GetDishRatings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetDishRatingsReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiGetDishRatingsRequest"
            }
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/dish/rating/new": {
      "post": {
        "operationId": "Campus_CreateDishRating",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateDishRatingReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateDishRatingRequest"
            }
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/feedback": {
      "post": {
        "operationId": "Campus_CreateFeedback",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateFeedbackReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "attachment",
            "description": "Optional file in Base64 (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "recipient",
            "description": "who is the feedback for\n\n - TUM_DEV: Feedback for the TUM Dev Team\n - TUM_CONTACT: Feedback for the general TUM Contact Form",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TUM_DEV",
              "TUM_CONTACT"
            ],
            "default": "TUM_DEV"
          },
          {
            "name": "fromEmail",
            "description": "the email address of the user",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "message",
            "description": "The actual message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location.latitude",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "location.longitude",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "osVersion",
            "description": "Optional os information which the user can choose (data protection) to attach or not",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appVersion",
            "description": "Optional app information which the user can choose (data protection) to attach or not",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/ios/notifications/deviceRequestResponse": {
      "post": {
        "summary": "Endpoint for the iOS app to respond to background notifications requests",
        "description": "TODO naming",
        "operationId": "Campus_IOSDeviceRequestResponse",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiIOSDeviceRequestResponseReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiIOSDeviceRequestResponseRequest"
            }
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/members/{lrzId}": {
      "get": {
        "operationId": "Campus_GetMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetMembersReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lrzId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/movies/{lastId}": {
      "get": {
        "operationId": "Campus_GetMovies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetMoviesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lastId",
            "description": "the last Id you have requested. Use -1 to get all movies",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/news/alerts": {
      "get": {
        "operationId": "Campus_GetNewsAlerts",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/apiNewsAlert"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lastNewsAlertId",
            "description": "the last id of the news item received. 0 to get all news items",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/news/sources": {
      "get": {
        "operationId": "Campus_GetNewsSources",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/apiNewsSource"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Campus"
        ]
      }
    },
    "/news/{lastNewsId}": {
      "get": {
        "operationId": "Campus_GetNews",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/apiNews"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lastNewsId",
            "description": "the last id of the news item received. 0 to get all news items",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "newsSource",
            "description": "filter by news source id. 0 to get all news items",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/notifications/confirm/{notificationId}": {
      "get": {
        "operationId": "Campus_GetNotificationConfirm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetNotificationConfirmReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/notifications/{notificationId}": {
      "get": {
        "operationId": "Campus_GetNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetNotificationReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/openingtimes/{language}": {
      "get": {
        "operationId": "Campus_GetOpeningTimes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetOpeningTimesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "language",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/roomfinder/room/search": {
      "post": {
        "operationId": "Campus_SearchRooms",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/apiRoom"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiSearchRoomsRequest"
            }
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    },
    "/studyrooms": {
      "get": {
        "operationId": "Campus_GetStudyRoomList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetStudyRoomListReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Campus"
        ]
      }
    },
    "/updatenote/{version}": {
      "get": {
        "operationId": "Campus_GetUpdateNote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetUpdateNoteReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Campus"
        ]
      }
    }
  },
  "definitions": {
    "CreateFeedbackRequestRecipient": {
      "type": "string",
      "enum": [
        "TUM_DEV",
        "TUM_CONTACT"
      ],
      "default": "TUM_DEV",
      "title": "- TUM_DEV: Feedback for the TUM Dev Team\n - TUM_CONTACT: Feedback for the general TUM Contact Form"
    },
    "GetMoreInformationReplyMoreInformation": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "apiCanteen": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiCoordinate": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiCreateCanteenRatingReply": {
      "type": "object"
    },
    "apiCreateCanteenRatingRequest": {
      "type": "object",
      "properties": {
        "points": {
          "type": "integer",
          "format": "int32",
          "title": "number in the range 1-5"
        },
        "canteenId": {
          "type": "string"
        },
        "image": {
          "type": "string",
          "format": "byte"
        },
        "ratingTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiRatingTag"
          },
          "title": "Optional list of tag ratings add as many tags with a rating (1-5) of the list of canteenRatingTags"
        },
        "comment": {
          "type": "string",
          "title": "Optional comment (max 256 chars)"
        }
      }
    },
    "apiCreateDeviceReply": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        }
      }
    },
    "apiCreateDeviceRequest": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "deviceType": {
          "$ref": "#/definitions/apiDeviceType"
        }
      }
    },
    "apiCreateDishRatingReply": {
      "type": "object"
    },
    "apiCreateDishRatingRequest": {
      "type": "object",
      "properties": {
        "points": {
          "type": "integer",
          "format": "int32",
          "title": "number in the range 1-5"
        },
        "canteenId": {
          "type": "string",
          "title": "Mandatory Name of the dish (EAT-API naming scheme \"MENSA_GARCHING\") Must be available int the given mensa"
        },
        "dish": {
          "type": "string",
          "title": "Mandatory Name of the dish (EAT-API naming scheme) Must be available int the given mensa"
        },
        "image": {
          "type": "string",
          "format": "byte",
          "title": "Optional JPEG image in Base64"
        },
        "ratingTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiRatingTag"
          },
          "title": "Optional list of tag ratings add as many tags with a rating (1-5) of the list of dishRatingTags"
        },
        "comment": {
          "type": "string",
          "title": "Optional comment (max 256 chars)"
        }
      }
    },
    "apiCreateFeedbackReply": {
      "type": "object"
    },
    "apiDeleteDeviceReply": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        }
      }
    },
    "apiDeviceType": {
      "type": "string",
      "enum": [
        "IOS",
        "ANDROID",
        "WINDOWS"
      ],
      "default": "IOS"
    },
    "apiGetAvailableCanteenTagsReply": {
      "type": "object",
      "properties": {
        "ratingTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiTagsOverview"
          }
        }
      }
    },
    "apiGetAvailableDishTagsReply": {
      "type": "object",
      "properties": {
        "ratingTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiTagsOverview"
          }
        }
      }
    },
    "apiGetCanteenHeadCountReply": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "The absolut count of humans in the canteen. Only valid in case percent != -1."
        },
        "maxCount": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum nunmber of humans in the canteen for the percent to be 100.00. Only valid in case percent != -1."
        },
        "percent": {
          "type": "number",
          "format": "float",
          "description": "Current capacity utilization of the canteen clamped to 0 and 100 or -1 in case no data is available."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "A time stamp indicating how up to date the response is. Only valid in case percent != -1."
        }
      }
    },
    "apiGetCanteenRatingsReply": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiSingleRatingReply"
          }
        },
        "avg": {
          "type": "number",
          "format": "double"
        },
        "std": {
          "type": "number",
          "format": "double"
        },
        "min": {
          "type": "integer",
          "format": "int32"
        },
        "max": {
          "type": "integer",
          "format": "int32"
        },
        "ratingTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiRatingTagResult"
          }
        }
      }
    },
    "apiGetCanteenRatingsRequest": {
      "type": "object",
      "properties": {
        "canteenId": {
          "type": "string",
          "title": "canteenId Mandatory Name of the canteen (EAT-API naming scheme \"MENSA_GARCHING\")"
        },
        "from": {
          "type": "string",
          "format": "date-time",
          "title": "Optional Parameter to define an interval for the ratings (Lower bound)"
        },
        "to": {
          "type": "string",
          "format": "date-time",
          "title": "Optional Parameter to define an interval for the ratings (Upper bound)"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "title": "Optional Parameter defines how many ratings are queried. If all ratings should be queried, enter \"-1\""
        }
      }
    },
    "apiGetCanteensReply": {
      "type": "object",
      "properties": {
        "canteen": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiCanteen"
          }
        }
      }
    },
    "apiGetDishRatingsReply": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiSingleRatingReply"
          }
        },
        "avg": {
          "type": "number",
          "format": "double"
        },
        "std": {
          "type": "number",
          "format": "double"
        },
        "min": {
          "type": "integer",
          "format": "int32"
        },
        "max": {
          "type": "integer",
          "format": "int32"
        },
        "ratingTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiRatingTagResult"
          }
        },
        "nameTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiRatingTagResult"
          }
        }
      }
    },
    "apiGetDishRatingsRequest": {
      "type": "object",
      "properties": {
        "canteenId": {
          "type": "string",
          "title": "Mandatory Name of the canteen (EAT-API naming scheme \"MENSA_GARCHING\")"
        },
        "dish": {
          "type": "string",
          "title": "Mandatory Name of the dish (EAT-API naming scheme) Must be available int the given mensa"
        },
        "from": {
          "type": "string",
          "format": "date-time",
          "title": "Optional Parameter to define an interval for the ratings (Lower bound)"
        },
        "to": {
          "type": "string",
          "format": "date-time",
          "title": "Optional Parameter to define an interval for the ratings (Upper bound)"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "title": "Optional Parameter defines how many ratings are queried. If all ratings should be queried, enter \"-1\""
        }
      }
    },
    "apiGetDishesReply": {
      "type": "object",
      "properties": {
        "dish": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apiGetMembersReply": {
      "type": "object",
      "properties": {
        "lrzId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "memberId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiGetMoreInformationReply": {
      "type": "object",
      "properties": {
        "infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GetMoreInformationReplyMoreInformation"
          }
        }
      }
    },
    "apiGetMoviesReply": {
      "type": "object",
      "properties": {
        "movies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiMovie"
          }
        }
      }
    },
    "apiGetNameTagsReply": {
      "type": "object",
      "properties": {
        "ratingTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiTagsOverview"
          }
        }
      }
    },
    "apiGetNewsAlertsReply": {
      "type": "object",
      "properties": {
        "alerts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiNewsAlert"
          }
        }
      }
    },
    "apiGetNewsReply": {
      "type": "object",
      "properties": {
        "news": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiNews"
          }
        }
      }
    },
    "apiGetNewsSourcesReply": {
      "type": "object",
      "properties": {
        "sources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiNewsSource"
          }
        }
      }
    },
    "apiGetNotificationConfirmReply": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "apiGetNotificationReply": {
      "type": "object",
      "properties": {
        "notificationId": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        }
      }
    },
    "apiGetOpeningTimesReply": {
      "type": "object",
      "properties": {
        "facilities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiOpeningTimesMsgElement"
          }
        }
      }
    },
    "apiGetResponsiblePersonReply": {
      "type": "object",
      "properties": {
        "responsiblePerson": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiResponsiblePerson"
          }
        }
      }
    },
    "apiGetStudyRoomListReply": {
      "type": "object",
      "properties": {
        "rooms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiStudyRoomMsgElement"
          }
        }
      }
    },
    "apiGetUpdateNoteReply": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "versionName": {
          "type": "string"
        }
      }
    },
    "apiGetUploadStatusReply": {
      "type": "object",
      "properties": {
        "fcmToken": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "studentId": {
          "type": "boolean"
        },
        "employeeId": {
          "type": "boolean"
        },
        "externalId": {
          "type": "boolean"
        }
      }
    },
    "apiIOSDeviceRequestResponseReply": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "apiIOSDeviceRequestResponseRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "payload": {
          "type": "string"
        }
      }
    },
    "apiMovie": {
      "type": "object",
      "properties": {
        "coverName": {
          "type": "string"
        },
        "coverPath": {
          "type": "string"
        },
        "movieId": {
          "type": "string",
          "format": "int64"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string"
        },
        "releaseYear": {
          "type": "string",
          "title": "release year of the movie"
        },
        "runtime": {
          "type": "string"
        },
        "genre": {
          "type": "string"
        },
        "director": {
          "type": "string"
        },
        "actors": {
          "type": "string"
        },
        "imdbRating": {
          "type": "string",
          "title": "imdb rating"
        },
        "description": {
          "type": "string"
        },
        "coverId": {
          "type": "string",
          "format": "int64"
        },
        "link": {
          "type": "string",
          "title": "Where to find additional information about this movie"
        }
      }
    },
    "apiNews": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "apiNewsAlert": {
      "type": "object",
      "properties": {
        "imageUrl": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "from": {
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "apiNewsSource": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        }
      }
    },
    "apiOpeningTimesMsgElement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "category": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "room": {
          "type": "string"
        },
        "transportStation": {
          "type": "string"
        },
        "openingHours": {
          "type": "string"
        },
        "infos": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "referenceId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiRatingTag": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "string",
          "format": "int64"
        },
        "points": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiRatingTagNewRequest": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "integer",
          "format": "int32"
        },
        "points": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiRatingTagResult": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "integer",
          "format": "int32"
        },
        "avg": {
          "type": "number",
          "format": "double"
        },
        "std": {
          "type": "number",
          "format": "double"
        },
        "min": {
          "type": "integer",
          "format": "int32"
        },
        "max": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiResponsiblePerson": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "telephone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "faculty": {
          "type": "string"
        },
        "tumId": {
          "type": "string"
        }
      }
    },
    "apiRoom": {
      "type": "object",
      "properties": {
        "roomId": {
          "type": "string",
          "format": "int64"
        },
        "roomCode": {
          "type": "string"
        },
        "buildingNr": {
          "type": "string"
        },
        "archId": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "purpose": {
          "type": "string"
        },
        "campus": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "apiSearchRoomsReply": {
      "type": "object",
      "properties": {
        "rooms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiRoom"
          }
        }
      }
    },
    "apiSearchRoomsRequest": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      }
    },
    "apiSingleRatingReply": {
      "type": "object",
      "properties": {
        "points": {
          "type": "integer",
          "format": "int32",
          "title": "number in the range 1-5"
        },
        "image": {
          "type": "string",
          "format": "byte",
          "title": "Optional JPEG image in Base64"
        },
        "comment": {
          "type": "string",
          "title": "Optional comment (max 256 chars)"
        },
        "ratingTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiRatingTagNewRequest"
          }
        },
        "visited": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "apiStudyRoom": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "integer",
          "format": "int32"
        },
        "roomId": {
          "type": "integer",
          "format": "int32"
        },
        "roomCode": {
          "type": "string"
        },
        "roomName": {
          "type": "string"
        },
        "buildingName": {
          "type": "string"
        }
      }
    },
    "apiStudyRoomMsgElement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "rooms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiStudyRoom"
          }
        }
      }
    },
    "apiTagsOverview": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "integer",
          "format": "int32"
        },
        "de": {
          "type": "string"
        },
        "en": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
