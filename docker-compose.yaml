services:
  backend:
    container_name: campus-backend
    image: antonwy/tca-backend
    restart: always
    build:
      context: server/
    ports:
      - 50051:50051
    environment:
      - DB_DSN=root:${DB_ROOT_PASSWORD}@tcp(db:${DB_PORT})/${DB_NAME}?charset=utf8mb4&parseTime=True&loc=Local
      - APNS_KEY_ID=${APNS_KEY_ID}
      - APNS_TEAM_ID=${APNS_TEAM_ID}
      - APNS_P8_FILE_PATH=${APNS_P8_FILE_PATH}
      - INFLUXDB_URL=${INFLUXDB_URL}
      - INFLUXDB_TOKEN=${INFLUXDB_ADMIN_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
    volumes:
      - ./apns_auth_key.p8:${APNS_P8_FILE_PATH}
    depends_on:
      - db

  db:
    container_name: campus-db
    image: mariadb:latest
    ports:
      - 3306:3306
    environment:
      - MARIADB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MARIADB_DATABASE=${DB_NAME}
    volumes:
      - campus-db-data:/var/lib/mysql
      - ./source-schema.sql:/entrypoint/schema.sql
      # Execute in container to init with schema:
      # mysql --user=root --password=secret_root_password campus_db < /entrypoint/schema.sql

  influxdb:
    container_name: campus-influxdb
    image: influxdb:latest
    ports:
      - 8086:8086
    volumes:
      - campus-influxdb-data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}

volumes:
    campus-db-data:
    campus-influxdb-data: