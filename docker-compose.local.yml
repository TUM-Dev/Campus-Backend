services:
  db:
    image: mysql:8
    restart: no # in dev, this avoids having to crawl through the restart and makes a crash more obvious ^^
    ports:
      - "${DB_PORT:-3306}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_USER_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: /usr/bin/mysql --user=root --password=${DB_USER_PASSWORD} --execute "SHOW DATABASES"
      interval: 2s
      timeout: 20s
      retries: 10
  backend:
    build:
      context: server/
      args:
        version: dev # compiled with the git sha in prod
    restart: no # in dev, this avoids having to crawl through the restart and makes a crash more obvious ^^
    ports:
      - "50051:50051"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-dev}
      - DB_DSN=${DB_USER_NAME:-root}:${DB_USER_PASSWORD}@tcp(db:${DB_PORT:-3306})/${DB_NAME}?charset=utf8mb4&parseTime=True&loc=Local
      - DB_NAME=${DB_NAME}
      - SENTRY_DSN=${SENTRY_DSN}
      - OMDB_API_KEY=${OMDB_API_KEY}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_URL=${SMTP_URL:-postout.lrz.de}
      - SMTP_USERNAME=${SMTP_USERNAME:-bot@tum.app}
      - SMTP_FROM=${SMTP_FROM:-bot@tum.app}
      - SMTP_PORT=${SMTP_PORT:-587}
    user: 1000:3000
    read_only: true
    volumes:
      - backend-storage:/Storage
    depends_on:
      db:
        condition: service_healthy

volumes:
  mysql-data:
    driver: local
  backend-storage:
    driver: local
